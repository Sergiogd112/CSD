

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue May 17 18:49:42 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4520 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	nvCOMRAM
    56  000001                     __pnvCOMRAM:
    57                           	callstack 0
    58  000001                     _var_Buff2:
    59                           	callstack 0
    60  000001                     	ds	1
    61  000002                     _var_Buff:
    62                           	callstack 0
    63  000002                     	ds	1
    64  000003                     _Var_S:
    65                           	callstack 0
    66  000003                     	ds	1
    67  000004                     _Var_Ch3:
    68                           	callstack 0
    69  000004                     	ds	1
    70  000005                     _Var_Ch2:
    71                           	callstack 0
    72  000005                     	ds	1
    73  000006                     _Var_Ch1:
    74                           	callstack 0
    75  000006                     	ds	1
    76  000007                     _Var_Ch0:
    77                           	callstack 0
    78  000007                     	ds	1
    79  000008                     _Var_E:
    80                           	callstack 0
    81  000008                     	ds	1
    82  0000                     _PORTD	set	3971
    83  0000                     _PORTC	set	3970
    84  0000                     _PORTB	set	3969
    85  0000                     _LATA	set	3977
    86  0000                     _PORTA	set	3968
    87  0000                     _LATD	set	3980
    88  0000                     _LATC	set	3979
    89  0000                     _LATB	set	3978
    90  0000                     _TRISA	set	3986
    91  0000                     _ADCON1	set	4033
    92  0000                     _GIE	set	32663
    93  0000                     _TRISD	set	3989
    94  0000                     _TRISC	set	3988
    95  0000                     _TRISB	set	3987
    96                           
    97                           ; #config settings
    98                           
    99                           	psect	cinit
   100  007E5E                     __pcinit:
   101                           	callstack 0
   102  007E5E                     start_initialization:
   103                           	callstack 0
   104  007E5E                     __initialization:
   105                           	callstack 0
   106                           
   107                           ; Clear objects allocated to COMRAM (1 bytes)
   108  007E5E  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   109  007E60                     end_of_initialization:
   110                           	callstack 0
   111  007E60                     __end_of__initialization:
   112                           	callstack 0
   113  007E60  0100               	movlb	0
   114  007E62  EF33  F03F         	goto	_main	;jump to C main() function
   115                           
   116                           	psect	bssCOMRAM
   117  00000B                     __pbssCOMRAM:
   118                           	callstack 0
   119  00000B                     _Var_Y:
   120                           	callstack 0
   121  00000B                     	ds	1
   122                           
   123                           	psect	cstackCOMRAM
   124  000009                     __pcstackCOMRAM:
   125                           	callstack 0
   126  000009                     ??_write_outputs:
   127  000009                     
   128                           ; 1 bytes @ 0x0
   129  000009                     	ds	2
   130  00000B                     
   131                           ; 1 bytes @ 0x2
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 66 in file "Dual_MUX_4.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   151 ;;      Params:         0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called: 1
   157 ;; This function calls:
   158 ;;		_init_system
   159 ;;		_read_inputs
   160 ;;		_truth_table
   161 ;;		_write_outputs
   162 ;; This function is called by:
   163 ;;		Startup code after reset
   164 ;; This function uses a non-reentrant model
   165 ;;
   166                           
   167                           	psect	text0
   168  007E66                     __ptext0:
   169                           	callstack 0
   170  007E66                     _main:
   171                           	callstack 30
   172  007E66                     
   173                           ;Dual_MUX_4.c: 67:     init_system();
   174  007E66  EC59  F03F         	call	_init_system	;wreg free
   175  007E6A                     l802:
   176                           
   177                           ;Dual_MUX_4.c: 70:         read_inputs();
   178  007E6A  EC77  F03F         	call	_read_inputs	;wreg free
   179  007E6E                     
   180                           ;Dual_MUX_4.c: 71:         truth_table();
   181  007E6E  ECAB  F03F         	call	_truth_table	;wreg free
   182  007E72                     
   183                           ;Dual_MUX_4.c: 72:         write_outputs();
   184  007E72  EC3F  F03F         	call	_write_outputs	;wreg free
   185  007E76  EF35  F03F         	goto	l802
   186  007E7A  EF00  F000         	goto	start
   187  007E7E                     __end_of_main:
   188                           	callstack 0
   189                           
   190 ;; *************** function _write_outputs *****************
   191 ;; Defined at:
   192 ;;		line 309 in file "Dual_MUX_4.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   206 ;;      Params:         0       0       0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0       0       0
   208 ;;      Temps:          2       0       0       0       0       0       0
   209 ;;      Totals:         2       0       0       0       0       0       0
   210 ;;Total ram usage:        2 bytes
   211 ;; Hardware stack levels used: 1
   212 ;; This function calls:
   213 ;;		Nothing
   214 ;; This function is called by:
   215 ;;		_main
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text1
   220  007E7E                     __ptext1:
   221                           	callstack 0
   222  007E7E                     _write_outputs:
   223                           	callstack 30
   224  007E7E                     
   225                           ;Dual_MUX_4.c: 311:     var_Buff = (Var_Y & 0b00000010) << 6;
   226  007E7E  C00B  F009         	movff	_Var_Y,??_write_outputs
   227  007E82  0E02               	movlw	2
   228  007E84  1609               	andwf	??_write_outputs^0,f,c
   229  007E86  0E06               	movlw	6
   230  007E88  6E0A               	movwf	(??_write_outputs+1)^0,c
   231  007E8A                     u95:
   232  007E8A  90D8               	bcf	status,0,c
   233  007E8C  3609               	rlcf	??_write_outputs^0,f,c
   234  007E8E  2E0A               	decfsz	(??_write_outputs+1)^0,f,c
   235  007E90  EF45  F03F         	goto	u95
   236  007E94  5009               	movf	??_write_outputs^0,w,c
   237  007E96  6E02               	movwf	_var_Buff^0,c
   238                           
   239                           ;Dual_MUX_4.c: 312:     var_Buff2 = (Var_Y & 0b00000001) << 2;
   240  007E98  C00B  F009         	movff	_Var_Y,??_write_outputs
   241  007E9C  0E01               	movlw	1
   242  007E9E  1609               	andwf	??_write_outputs^0,f,c
   243  007EA0  90D8               	bcf	status,0,c
   244  007EA2  3609               	rlcf	??_write_outputs^0,f,c
   245  007EA4  90D8               	bcf	status,0,c
   246  007EA6  3409               	rlcf	??_write_outputs^0,w,c
   247  007EA8  6E01               	movwf	_var_Buff2^0,c
   248                           
   249                           ;Dual_MUX_4.c: 313:     PORTB = var_Buff | var_Buff2;
   250  007EAA  5002               	movf	_var_Buff^0,w,c
   251  007EAC  1001               	iorwf	_var_Buff2^0,w,c
   252  007EAE  6E81               	movwf	129,c	;volatile
   253  007EB0  0012               	return		;funcret
   254  007EB2                     __end_of_write_outputs:
   255                           	callstack 0
   256                           
   257 ;; *************** function _truth_table *****************
   258 ;; Defined at:
   259 ;;		line 288 in file "Dual_MUX_4.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   273 ;;      Params:         0       0       0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels used: 1
   279 ;; This function calls:
   280 ;;		Nothing
   281 ;; This function is called by:
   282 ;;		_main
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text2
   287  007F56                     __ptext2:
   288                           	callstack 0
   289  007F56                     _truth_table:
   290                           	callstack 30
   291  007F56                     
   292                           ;Dual_MUX_4.c: 292:     if (Var_S == 0 && Var_E == 1) {
   293  007F56  5003               	movf	_Var_S^0,w,c
   294  007F58  A4D8               	btfss	status,2,c
   295  007F5A  EFB1  F03F         	goto	u11
   296  007F5E  EFB3  F03F         	goto	u10
   297  007F62                     u11:
   298  007F62  EFBF  F03F         	goto	l778
   299  007F66                     u10:
   300  007F66  0408               	decf	_Var_E^0,w,c
   301  007F68  A4D8               	btfss	status,2,c
   302  007F6A  EFB9  F03F         	goto	u21
   303  007F6E  EFBB  F03F         	goto	u20
   304  007F72                     u21:
   305  007F72  EFBF  F03F         	goto	l778
   306  007F76                     u20:
   307  007F76                     
   308                           ;Dual_MUX_4.c: 293:         Var_Y = Var_Ch0;
   309  007F76  C007  F00B         	movff	_Var_Ch0,_Var_Y
   310                           
   311                           ;Dual_MUX_4.c: 294:     } else if (Var_S == 1 && Var_E == 1) {
   312  007F7A  EFFF  F03F         	goto	l79
   313  007F7E                     l778:
   314  007F7E  0403               	decf	_Var_S^0,w,c
   315  007F80  A4D8               	btfss	status,2,c
   316  007F82  EFC5  F03F         	goto	u31
   317  007F86  EFC7  F03F         	goto	u30
   318  007F8A                     u31:
   319  007F8A  EFD3  F03F         	goto	l784
   320  007F8E                     u30:
   321  007F8E  0408               	decf	_Var_E^0,w,c
   322  007F90  A4D8               	btfss	status,2,c
   323  007F92  EFCD  F03F         	goto	u41
   324  007F96  EFCF  F03F         	goto	u40
   325  007F9A                     u41:
   326  007F9A  EFD3  F03F         	goto	l784
   327  007F9E                     u40:
   328  007F9E                     
   329                           ;Dual_MUX_4.c: 295:         Var_Y = Var_Ch1;
   330  007F9E  C006  F00B         	movff	_Var_Ch1,_Var_Y
   331                           
   332                           ;Dual_MUX_4.c: 296:     } else if (Var_S == 2 && Var_E == 1) {
   333  007FA2  EFFF  F03F         	goto	l79
   334  007FA6                     l784:
   335  007FA6  0E02               	movlw	2
   336  007FA8  1803               	xorwf	_Var_S^0,w,c
   337  007FAA  A4D8               	btfss	status,2,c
   338  007FAC  EFDA  F03F         	goto	u51
   339  007FB0  EFDC  F03F         	goto	u50
   340  007FB4                     u51:
   341  007FB4  EFE8  F03F         	goto	l790
   342  007FB8                     u50:
   343  007FB8  0408               	decf	_Var_E^0,w,c
   344  007FBA  A4D8               	btfss	status,2,c
   345  007FBC  EFE2  F03F         	goto	u61
   346  007FC0  EFE4  F03F         	goto	u60
   347  007FC4                     u61:
   348  007FC4  EFE8  F03F         	goto	l790
   349  007FC8                     u60:
   350  007FC8                     
   351                           ;Dual_MUX_4.c: 297:         Var_Y = Var_Ch2;
   352  007FC8  C005  F00B         	movff	_Var_Ch2,_Var_Y
   353                           
   354                           ;Dual_MUX_4.c: 298:     } else if (Var_S == 3 && Var_E == 1) {
   355  007FCC  EFFF  F03F         	goto	l79
   356  007FD0                     l790:
   357  007FD0  0E03               	movlw	3
   358  007FD2  1803               	xorwf	_Var_S^0,w,c
   359  007FD4  A4D8               	btfss	status,2,c
   360  007FD6  EFEF  F03F         	goto	u71
   361  007FDA  EFF1  F03F         	goto	u70
   362  007FDE                     u71:
   363  007FDE  EFFD  F03F         	goto	l796
   364  007FE2                     u70:
   365  007FE2  0408               	decf	_Var_E^0,w,c
   366  007FE4  A4D8               	btfss	status,2,c
   367  007FE6  EFF7  F03F         	goto	u81
   368  007FEA  EFF9  F03F         	goto	u80
   369  007FEE                     u81:
   370  007FEE  EFFD  F03F         	goto	l796
   371  007FF2                     u80:
   372  007FF2                     
   373                           ;Dual_MUX_4.c: 299:         Var_Y = Var_Ch3;
   374  007FF2  C004  F00B         	movff	_Var_Ch3,_Var_Y
   375                           
   376                           ;Dual_MUX_4.c: 300:     } else
   377  007FF6  EFFF  F03F         	goto	l79
   378  007FFA                     l796:
   379                           
   380                           ;Dual_MUX_4.c: 301:         Var_Y = 0x00;
   381  007FFA  0E00               	movlw	0
   382  007FFC  6E0B               	movwf	_Var_Y^0,c
   383  007FFE                     l79:
   384  007FFE  0012               	return		;funcret
   385  008000                     __end_of_truth_table:
   386                           	callstack 0
   387                           
   388 ;; *************** function _read_inputs *****************
   389 ;; Defined at:
   390 ;;		line 236 in file "Dual_MUX_4.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;		None
   395 ;; Return value:  Size  Location     Type
   396 ;;                  1    wreg      void 
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0
   399 ;; Tracked objects:
   400 ;;		On entry : 0/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   404 ;;      Params:         0       0       0       0       0       0       0
   405 ;;      Locals:         0       0       0       0       0       0       0
   406 ;;      Temps:          0       0       0       0       0       0       0
   407 ;;      Totals:         0       0       0       0       0       0       0
   408 ;;Total ram usage:        0 bytes
   409 ;; Hardware stack levels used: 1
   410 ;; This function calls:
   411 ;;		Nothing
   412 ;; This function is called by:
   413 ;;		_main
   414 ;; This function uses a non-reentrant model
   415 ;;
   416                           
   417                           	psect	text3
   418  007EEE                     __ptext3:
   419                           	callstack 0
   420  007EEE                     _read_inputs:
   421                           	callstack 30
   422  007EEE  CF82 F002          	movff	3970,_var_Buff	;volatile
   423  007EF2  5002               	movf	_var_Buff^0,w,c
   424  007EF4  0B08               	andlw	8
   425  007EF6  6E02               	movwf	_var_Buff^0,c
   426  007EF8  5002               	movf	_var_Buff^0,w,c
   427  007EFA  0AFF               	xorlw	255
   428  007EFC  0B08               	andlw	8
   429  007EFE  6E02               	movwf	_var_Buff^0,c
   430  007F00  3802               	swapf	_var_Buff^0,w,c
   431  007F02  46E8               	rlncf	wreg,f,c
   432  007F04  0B1F               	andlw	31
   433  007F06  6E08               	movwf	_Var_E^0,c
   434  007F08                     
   435                           ;Dual_MUX_4.c: 259:     var_Buff = PORTA;
   436  007F08  CF80 F002          	movff	3968,_var_Buff	;volatile
   437                           
   438                           ;Dual_MUX_4.c: 260:     var_Buff = var_Buff & 0b00011000;
   439  007F0C  5002               	movf	_var_Buff^0,w,c
   440  007F0E  0B18               	andlw	24
   441  007F10  6E02               	movwf	_var_Buff^0,c
   442                           
   443                           ;Dual_MUX_4.c: 261:     Var_Ch3 = var_Buff >> 3;
   444  007F12  3802               	swapf	_var_Buff^0,w,c
   445  007F14  46E8               	rlncf	wreg,f,c
   446  007F16  0B1F               	andlw	31
   447  007F18  6E04               	movwf	_Var_Ch3^0,c
   448  007F1A                     
   449                           ;Dual_MUX_4.c: 264:     var_Buff = PORTD;
   450  007F1A  CF83 F002          	movff	3971,_var_Buff	;volatile
   451                           
   452                           ;Dual_MUX_4.c: 265:     Var_Ch2 = (var_Buff & 0b00001100) >> 2;
   453  007F1E  4002               	rrncf	_var_Buff^0,w,c
   454  007F20  42E8               	rrncf	wreg,f,c
   455  007F22  0B3F               	andlw	63
   456  007F24  0B03               	andlw	3
   457  007F26  6E05               	movwf	_Var_Ch2^0,c
   458  007F28                     
   459                           ;Dual_MUX_4.c: 268:     var_Buff = PORTC;
   460  007F28  CF82 F002          	movff	3970,_var_Buff	;volatile
   461                           
   462                           ;Dual_MUX_4.c: 269:     Var_Ch1 = (var_Buff & 0b11000000) >> 6;
   463  007F2C  4402               	rlncf	_var_Buff^0,w,c
   464  007F2E  46E8               	rlncf	wreg,f,c
   465  007F30  0B03               	andlw	3
   466  007F32  0B03               	andlw	3
   467  007F34  6E06               	movwf	_Var_Ch1^0,c
   468                           
   469                           ;Dual_MUX_4.c: 272:     var_Buff = (PORTB & 0b00001000) >> 3;
   470  007F36  3881               	swapf	129,w,c	;volatile
   471  007F38  46E8               	rlncf	wreg,f,c
   472  007F3A  0B1F               	andlw	31
   473  007F3C  0B01               	andlw	1
   474  007F3E  6E02               	movwf	_var_Buff^0,c
   475                           
   476                           ;Dual_MUX_4.c: 274:     var_Buff2 = (PORTA & 0b00100000) >> 4;
   477  007F40  3880               	swapf	128,w,c	;volatile
   478  007F42  0B0F               	andlw	15
   479  007F44  0B02               	andlw	2
   480  007F46  6E01               	movwf	_var_Buff2^0,c
   481                           
   482                           ;Dual_MUX_4.c: 275:     Var_Ch0 = var_Buff | var_Buff2;
   483  007F48  5002               	movf	_var_Buff^0,w,c
   484  007F4A  1001               	iorwf	_var_Buff2^0,w,c
   485  007F4C  6E07               	movwf	_Var_Ch0^0,c
   486                           
   487                           ;Dual_MUX_4.c: 278:     Var_S = PORTB & 0b00000011;
   488  007F4E  5081               	movf	129,w,c	;volatile
   489  007F50  0B03               	andlw	3
   490  007F52  6E03               	movwf	_Var_S^0,c
   491  007F54  0012               	return		;funcret
   492  007F56                     __end_of_read_inputs:
   493                           	callstack 0
   494                           
   495 ;; *************** function _init_system *****************
   496 ;; Defined at:
   497 ;;		line 85 in file "Dual_MUX_4.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   511 ;;      Params:         0       0       0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0       0       0
   514 ;;      Totals:         0       0       0       0       0       0       0
   515 ;;Total ram usage:        0 bytes
   516 ;; Hardware stack levels used: 1
   517 ;; This function calls:
   518 ;;		Nothing
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text4
   525  007EB2                     __ptext4:
   526                           	callstack 0
   527  007EB2                     _init_system:
   528                           	callstack 30
   529  007EB2  0E00               	movlw	0
   530  007EB4  6E80               	movwf	128,c	;volatile
   531  007EB6  0E00               	movlw	0
   532  007EB8  6E89               	movwf	137,c	;volatile
   533  007EBA  0E0F               	movlw	15
   534  007EBC  6EC1               	movwf	193,c	;volatile
   535  007EBE  0E38               	movlw	56
   536  007EC0  6E92               	movwf	146,c	;volatile
   537  007EC2  0E00               	movlw	0
   538  007EC4  6E81               	movwf	129,c	;volatile
   539  007EC6  0E00               	movlw	0
   540  007EC8  6E8A               	movwf	138,c	;volatile
   541  007ECA  0E0B               	movlw	11
   542  007ECC  6E93               	movwf	147,c	;volatile
   543  007ECE  0E00               	movlw	0
   544  007ED0  6E82               	movwf	130,c	;volatile
   545  007ED2  0E00               	movlw	0
   546  007ED4  6E8B               	movwf	139,c	;volatile
   547  007ED6  0EC8               	movlw	200
   548  007ED8  6E94               	movwf	148,c	;volatile
   549  007EDA  0E00               	movlw	0
   550  007EDC  6E83               	movwf	131,c	;volatile
   551  007EDE  0E00               	movlw	0
   552  007EE0  6E8C               	movwf	140,c	;volatile
   553  007EE2  0E0C               	movlw	12
   554  007EE4  6E95               	movwf	149,c	;volatile
   555  007EE6  9EF2               	bcf	4082,7,c	;volatile
   556  007EE8  0E00               	movlw	0
   557  007EEA  6E0B               	movwf	_Var_Y^0,c
   558  007EEC  0012               	return		;funcret
   559  007EEE                     __end_of_init_system:
   560                           	callstack 0
   561  0000                     
   562                           	psect	rparam
   563  0000                     
   564                           	psect	idloc
   565                           
   566                           ;Config register IDLOC0 @ 0x200000
   567                           ;	unspecified, using default values
   568  200000                     	org	2097152
   569  200000  FF                 	db	255
   570                           
   571                           ;Config register IDLOC1 @ 0x200001
   572                           ;	unspecified, using default values
   573  200001                     	org	2097153
   574  200001  FF                 	db	255
   575                           
   576                           ;Config register IDLOC2 @ 0x200002
   577                           ;	unspecified, using default values
   578  200002                     	org	2097154
   579  200002  FF                 	db	255
   580                           
   581                           ;Config register IDLOC3 @ 0x200003
   582                           ;	unspecified, using default values
   583  200003                     	org	2097155
   584  200003  FF                 	db	255
   585                           
   586                           ;Config register IDLOC4 @ 0x200004
   587                           ;	unspecified, using default values
   588  200004                     	org	2097156
   589  200004  FF                 	db	255
   590                           
   591                           ;Config register IDLOC5 @ 0x200005
   592                           ;	unspecified, using default values
   593  200005                     	org	2097157
   594  200005  FF                 	db	255
   595                           
   596                           ;Config register IDLOC6 @ 0x200006
   597                           ;	unspecified, using default values
   598  200006                     	org	2097158
   599  200006  FF                 	db	255
   600                           
   601                           ;Config register IDLOC7 @ 0x200007
   602                           ;	unspecified, using default values
   603  200007                     	org	2097159
   604  200007  FF                 	db	255
   605                           
   606                           	psect	config
   607                           
   608                           ; Padding undefined space
   609  300000                     	org	3145728
   610  300000  FF                 	db	255
   611                           
   612                           ;Config register CONFIG1H @ 0x300001
   613                           ;	Oscillator Selection bits
   614                           ;	OSC = XT, XT oscillator
   615                           ;	Fail-Safe Clock Monitor Enable bit
   616                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   617                           ;	Internal/External Oscillator Switchover bit
   618                           ;	IESO = OFF, Oscillator Switchover mode disabled
   619  300001                     	org	3145729
   620  300001  01                 	db	1
   621                           
   622                           ;Config register CONFIG2L @ 0x300002
   623                           ;	Power-up Timer Enable bit
   624                           ;	PWRT = ON, PWRT enabled
   625                           ;	Brown-out Reset Enable bits
   626                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   627                           ;	Brown Out Reset Voltage bits
   628                           ;	BORV = 3, Minimum setting
   629  300002                     	org	3145730
   630  300002  1E                 	db	30
   631                           
   632                           ;Config register CONFIG2H @ 0x300003
   633                           ;	Watchdog Timer Enable bit
   634                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   635                           ;	Watchdog Timer Postscale Select bits
   636                           ;	WDTPS = 32768, 1:32768
   637  300003                     	org	3145731
   638  300003  1E                 	db	30
   639                           
   640                           ; Padding undefined space
   641  300004                     	org	3145732
   642  300004  FF                 	db	255
   643                           
   644                           ;Config register CONFIG3H @ 0x300005
   645                           ;	CCP2 MUX bit
   646                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   647                           ;	PORTB A/D Enable bit
   648                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   649                           ;	Low-Power Timer1 Oscillator Enable bit
   650                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   651                           ;	MCLR Pin Enable bit
   652                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   653  300005                     	org	3145733
   654  300005  81                 	db	129
   655                           
   656                           ;Config register CONFIG4L @ 0x300006
   657                           ;	Stack Full/Underflow Reset Enable bit
   658                           ;	STVREN = ON, Stack full/underflow will cause Reset
   659                           ;	Single-Supply ICSP Enable bit
   660                           ;	LVP = OFF, Single-Supply ICSP disabled
   661                           ;	Extended Instruction Set Enable bit
   662                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   663                           ;	Background Debugger Enable bit
   664                           ;	DEBUG = 0x1, unprogrammed default
   665  300006                     	org	3145734
   666  300006  81                 	db	129
   667                           
   668                           ; Padding undefined space
   669  300007                     	org	3145735
   670  300007  FF                 	db	255
   671                           
   672                           ;Config register CONFIG5L @ 0x300008
   673                           ;	Code Protection bit
   674                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   675                           ;	Code Protection bit
   676                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   677                           ;	Code Protection bit
   678                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   679                           ;	Code Protection bit
   680                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   681  300008                     	org	3145736
   682  300008  0F                 	db	15
   683                           
   684                           ;Config register CONFIG5H @ 0x300009
   685                           ;	Boot Block Code Protection bit
   686                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   687                           ;	Data EEPROM Code Protection bit
   688                           ;	CPD = OFF, Data EEPROM not code-protected
   689  300009                     	org	3145737
   690  300009  C0                 	db	192
   691                           
   692                           ;Config register CONFIG6L @ 0x30000A
   693                           ;	Write Protection bit
   694                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   695                           ;	Write Protection bit
   696                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   697                           ;	Write Protection bit
   698                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   699                           ;	Write Protection bit
   700                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   701  30000A                     	org	3145738
   702  30000A  0F                 	db	15
   703                           
   704                           ;Config register CONFIG6H @ 0x30000B
   705                           ;	Configuration Register Write Protection bit
   706                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   707                           ;	Boot Block Write Protection bit
   708                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   709                           ;	Data EEPROM Write Protection bit
   710                           ;	WRTD = OFF, Data EEPROM not write-protected
   711  30000B                     	org	3145739
   712  30000B  E0                 	db	224
   713                           
   714                           ;Config register CONFIG7L @ 0x30000C
   715                           ;	Table Read Protection bit
   716                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   717                           ;	Table Read Protection bit
   718                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   719                           ;	Table Read Protection bit
   720                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   721                           ;	Table Read Protection bit
   722                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   723  30000C                     	org	3145740
   724  30000C  0F                 	db	15
   725                           
   726                           ;Config register CONFIG7H @ 0x30000D
   727                           ;	Boot Block Table Read Protection bit
   728                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   729  30000D                     	org	3145741
   730  30000D  40                 	db	64
   731                           tosu	equ	0xFFF
   732                           tosh	equ	0xFFE
   733                           tosl	equ	0xFFD
   734                           stkptr	equ	0xFFC
   735                           pclatu	equ	0xFFB
   736                           pclath	equ	0xFFA
   737                           pcl	equ	0xFF9
   738                           tblptru	equ	0xFF8
   739                           tblptrh	equ	0xFF7
   740                           tblptrl	equ	0xFF6
   741                           tablat	equ	0xFF5
   742                           prodh	equ	0xFF4
   743                           prodl	equ	0xFF3
   744                           indf0	equ	0xFEF
   745                           postinc0	equ	0xFEE
   746                           postdec0	equ	0xFED
   747                           preinc0	equ	0xFEC
   748                           plusw0	equ	0xFEB
   749                           fsr0h	equ	0xFEA
   750                           fsr0l	equ	0xFE9
   751                           wreg	equ	0xFE8
   752                           indf1	equ	0xFE7
   753                           postinc1	equ	0xFE6
   754                           postdec1	equ	0xFE5
   755                           preinc1	equ	0xFE4
   756                           plusw1	equ	0xFE3
   757                           fsr1h	equ	0xFE2
   758                           fsr1l	equ	0xFE1
   759                           bsr	equ	0xFE0
   760                           indf2	equ	0xFDF
   761                           postinc2	equ	0xFDE
   762                           postdec2	equ	0xFDD
   763                           preinc2	equ	0xFDC
   764                           plusw2	equ	0xFDB
   765                           fsr2h	equ	0xFDA
   766                           fsr2l	equ	0xFD9
   767                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2      11
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_write_outputs

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_system
                        _read_inputs
                        _truth_table
                      _write_outputs
 ---------------------------------------------------------------------------------
 (1) _write_outputs                                        2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _truth_table                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_inputs                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_system                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_system
   _read_inputs
   _truth_table
   _write_outputs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      2       B       1        8.7%
BITBIGSFRhhl        30      0       0      17        0.0%
BITBIGSFRhlh        2B      0       0      18        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhll         5      0       0      19        0.0%
BITBIGSFRl           5      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      21        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue May 17 18:49:42 2022

                     l65 7EEC                       l82 7EB0                       l68 7F54  
                     l79 7FFE                       u10 7F66                       u11 7F62  
                     u20 7F76                       u21 7F72                       u30 7F8E  
                     u31 7F8A                       u40 7F9E                       u41 7F9A  
                     u50 7FB8                       u51 7FB4                       u60 7FC8  
                     u61 7FC4                       u70 7FE2                       u71 7FDE  
                     u80 7FF2                       u81 7FEE                       u95 7E8A  
                    l800 7E66                      l802 7E6A                      l804 7E6E  
                    l806 7E72                      l760 7EE6                      l770 7F28  
                    l762 7EEE                      l764 7EF2                      l780 7F8E  
                    l772 7F56                      l758 7EB2                      l766 7F08  
                    l790 7FD0                      l782 7F9E                      l774 7F66  
                    l768 7F1A                      l792 7FE2                      l784 7FA6  
                    l776 7F76                      l794 7FF2                      l786 7FB8  
                    l778 7F7E                      l796 7FFA                      l788 7FC8  
                    l798 7E7E                      _GIE 007F97                      wreg 000FE8  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _main 7E66                     start 0000  
           ___param_bank 000000                    ?_main 0009                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _Var_E 0008                    _Var_S 0003  
                  _Var_Y 000B              _truth_table 7F56             ?_init_system 0009  
           ?_read_inputs 0009                    status 000FD8          __initialization 7E5E  
           __end_of_main 7E7E                   ??_main 000B            __activetblptr 000000  
                 _ADCON1 000FC1                   isa$std 000001               __accesstop 0080  
__end_of__initialization 7E60            ___rparam_used 000001           __pcstackCOMRAM 0009  
             __pnvCOMRAM 0001             ?_truth_table 0009                  __Hparam 0000  
                _Var_Ch0 0007                  _Var_Ch1 0006                  _Var_Ch2 0005  
                _Var_Ch3 0004                  __Lparam 0000            _write_outputs 7E7E  
                __pcinit 7E5E                  __ramtop 0600                  __ptext0 7E66  
                __ptext1 7E7E                  __ptext2 7F56                  __ptext3 7EEE  
                __ptext4 7EB2     end_of_initialization 7E60           ?_write_outputs 0009  
    start_initialization 7E5E          ??_write_outputs 0009              __pbssCOMRAM 000B  
          ??_init_system 0009            ??_read_inputs 0009      __end_of_init_system 7EEE  
    __end_of_read_inputs 7F56                _var_Buff2 0001                 __Hrparam 0000  
               __Lrparam 0000              _init_system 7EB2              _read_inputs 7EEE  
               _var_Buff 0002                 isa$xinst 000000            ??_truth_table 0009  
  __end_of_write_outputs 7EB2      __end_of_truth_table 8000  
