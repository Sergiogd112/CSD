

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue May 17 19:45:15 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4520 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	nvCOMRAM
    56  000001                     __pnvCOMRAM:
    57                           	callstack 0
    58  000001                     _var_buf3:
    59                           	callstack 0
    60  000001                     	ds	1
    61  000002                     _var_buf2:
    62                           	callstack 0
    63  000002                     	ds	1
    64  000003                     _var_buf:
    65                           	callstack 0
    66  000003                     	ds	1
    67  000004                     _Var_Li:
    68                           	callstack 0
    69  000004                     	ds	1
    70  000005                     _Var_Ei:
    71                           	callstack 0
    72  000005                     	ds	1
    73  000006                     _Var_Gi:
    74                           	callstack 0
    75  000006                     	ds	1
    76  000007                     _Var_B:
    77                           	callstack 0
    78  000007                     	ds	1
    79  000008                     _Var_A:
    80                           	callstack 0
    81  000008                     	ds	1
    82  0000                     _PORTD	set	3971
    83  0000                     _PORTC	set	3970
    84  0000                     _PORTB	set	3969
    85  0000                     _LATA	set	3977
    86  0000                     _PORTA	set	3968
    87  0000                     _LATB	set	3978
    88  0000                     _TRISA	set	3986
    89  0000                     _ADCON1	set	4033
    90  0000                     _GIE	set	32663
    91  0000                     _TRISB	set	3987
    92                           
    93                           ; #config settings
    94                           
    95                           	psect	cinit
    96  007E58                     __pcinit:
    97                           	callstack 0
    98  007E58                     start_initialization:
    99                           	callstack 0
   100  007E58                     __initialization:
   101                           	callstack 0
   102                           
   103                           ; Clear objects allocated to COMRAM (3 bytes)
   104  007E58  6A0B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   105  007E5A  6A0A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   106  007E5C  6A09               	clrf	__pbssCOMRAM& (0+255),c
   107  007E5E                     end_of_initialization:
   108                           	callstack 0
   109  007E5E                     __end_of__initialization:
   110                           	callstack 0
   111  007E5E  0100               	movlb	0
   112  007E60  EF32  F03F         	goto	_main	;jump to C main() function
   113                           
   114                           	psect	bssCOMRAM
   115  000009                     __pbssCOMRAM:
   116                           	callstack 0
   117  000009                     _Var_LT:
   118                           	callstack 0
   119  000009                     	ds	1
   120  00000A                     _Var_EQ:
   121                           	callstack 0
   122  00000A                     	ds	1
   123  00000B                     _Var_GT:
   124                           	callstack 0
   125  00000B                     	ds	1
   126                           
   127                           	psect	cstackCOMRAM
   128  000000                     __pcstackCOMRAM:
   129                           	callstack 0
   130  000000                     
   131                           ; 1 bytes @ 0x0
   132 ;;
   133 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   134 ;;
   135 ;; *************** function _main *****************
   136 ;; Defined at:
   137 ;;		line 55 in file "Comp_4bit.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		wreg, status,2, status,0, cstack
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   151 ;;      Params:         0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels required when called: 1
   157 ;; This function calls:
   158 ;;		_init_system
   159 ;;		_read_inputs
   160 ;;		_truth_table
   161 ;;		_write_outputs
   162 ;; This function is called by:
   163 ;;		Startup code after reset
   164 ;; This function uses a non-reentrant model
   165 ;;
   166                           
   167                           	psect	text0
   168  007E64                     __ptext0:
   169                           	callstack 0
   170  007E64                     _main:
   171                           	callstack 30
   172  007E64                     
   173                           ;Comp_4bit.c: 57:     init_system();;Comp_4bit.c: 57:     var_buf3 = var_buf & 0b1000000
      +                          0;
   174  007E64  EC3E  F03F         	call	_init_system	;wreg free
   175  007E68                     l779:
   176                           
   177                           ;Comp_4bit.c: 59:     {;Comp_4bit.c: 59:     var_buf = var_buf & 0b00000001;;Comp_4bit.c
      +                          : 60:         read_inputs();;Comp_4bit.c: 60:     Var_B = var_buf | var_buf2 | var_buf3;
   178  007E68  ECB7  F03F         	call	_read_inputs	;wreg free
   179  007E6C                     
   180                           ;Comp_4bit.c: 61:         truth_table();;Comp_4bit.c: 61: 
   181  007E6C  EC85  F03F         	call	_truth_table	;wreg free
   182  007E70                     
   183                           ;Comp_4bit.c: 62:         write_outputs();;Comp_4bit.c: 62:     var_buf = PORTC & 0b1100
      +                          0000;
   184  007E70  EC60  F03F         	call	_write_outputs	;wreg free
   185  007E74  EF34  F03F         	goto	l779
   186  007E78  EF00  F000         	goto	start
   187  007E7C                     __end_of_main:
   188                           	callstack 0
   189                           
   190 ;; *************** function _write_outputs *****************
   191 ;; Defined at:
   192 ;;		line 284 in file "Comp_4bit.c"
   193 ;; Parameters:    Size  Location     Type
   194 ;;		None
   195 ;; Auto vars:     Size  Location     Type
   196 ;;		None
   197 ;; Return value:  Size  Location     Type
   198 ;;                  1    wreg      void 
   199 ;; Registers used:
   200 ;;		wreg, status,2, status,0
   201 ;; Tracked objects:
   202 ;;		On entry : 0/0
   203 ;;		On exit  : 0/0
   204 ;;		Unchanged: 0/0
   205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   206 ;;      Params:         0       0       0       0       0       0       0
   207 ;;      Locals:         0       0       0       0       0       0       0
   208 ;;      Temps:          0       0       0       0       0       0       0
   209 ;;      Totals:         0       0       0       0       0       0       0
   210 ;;Total ram usage:        0 bytes
   211 ;; Hardware stack levels used: 1
   212 ;; This function calls:
   213 ;;		Nothing
   214 ;; This function is called by:
   215 ;;		_main
   216 ;; This function uses a non-reentrant model
   217 ;;
   218                           
   219                           	psect	text1
   220  007EC0                     __ptext1:
   221                           	callstack 0
   222  007EC0                     _write_outputs:
   223                           	callstack 30
   224  007EC0                     
   225                           ;Comp_4bit.c: 288:     var_buf = PORTB & 0b11111011;
   226  007EC0  5081               	movf	129,w,c	;volatile
   227  007EC2  0BFB               	andlw	251
   228  007EC4  6E03               	movwf	_var_buf^0,c
   229                           
   230                           ;Comp_4bit.c: 289:     var_buf2 = (Var_GT) << 2;
   231  007EC6  440B               	rlncf	_Var_GT^0,w,c
   232  007EC8  46E8               	rlncf	wreg,f,c
   233  007ECA  0BFC               	andlw	252
   234  007ECC  6E02               	movwf	_var_buf2^0,c
   235                           
   236                           ;Comp_4bit.c: 290:     var_buf2 = var_buf2 | var_buf;
   237  007ECE  5002               	movf	_var_buf2^0,w,c
   238  007ED0  1003               	iorwf	_var_buf^0,w,c
   239  007ED2  6E02               	movwf	_var_buf2^0,c
   240  007ED4                     
   241                           ;Comp_4bit.c: 291:     PORTB = var_buf2;
   242  007ED4  C002  FF81         	movff	_var_buf2,3969	;volatile
   243                           
   244                           ;Comp_4bit.c: 292:     var_buf = PORTA & 0b11110111;
   245  007ED8  5080               	movf	128,w,c	;volatile
   246  007EDA  0BF7               	andlw	247
   247  007EDC  6E03               	movwf	_var_buf^0,c
   248                           
   249                           ;Comp_4bit.c: 293:     var_buf2 = Var_EQ << 3;
   250  007EDE  380A               	swapf	_Var_EQ^0,w,c
   251  007EE0  42E8               	rrncf	wreg,f,c
   252  007EE2  0BF8               	andlw	248
   253  007EE4  6E02               	movwf	_var_buf2^0,c
   254                           
   255                           ;Comp_4bit.c: 294:     var_buf2 = var_buf2 | var_buf;
   256  007EE6  5002               	movf	_var_buf2^0,w,c
   257  007EE8  1003               	iorwf	_var_buf^0,w,c
   258  007EEA  6E02               	movwf	_var_buf2^0,c
   259  007EEC                     
   260                           ;Comp_4bit.c: 295:     PORTA = var_buf2;
   261  007EEC  C002  FF80         	movff	_var_buf2,3968	;volatile
   262                           
   263                           ;Comp_4bit.c: 296:     var_buf = PORTC & 0b11011111;
   264  007EF0  5082               	movf	130,w,c	;volatile
   265  007EF2  0BDF               	andlw	223
   266  007EF4  6E03               	movwf	_var_buf^0,c
   267                           
   268                           ;Comp_4bit.c: 297:     var_buf2 = Var_LT << 5;
   269  007EF6  3809               	swapf	_Var_LT^0,w,c
   270  007EF8  46E8               	rlncf	wreg,f,c
   271  007EFA  0BE0               	andlw	224
   272  007EFC  6E02               	movwf	_var_buf2^0,c
   273                           
   274                           ;Comp_4bit.c: 298:     var_buf2 = var_buf2 | var_buf;
   275  007EFE  5002               	movf	_var_buf2^0,w,c
   276  007F00  1003               	iorwf	_var_buf^0,w,c
   277  007F02  6E02               	movwf	_var_buf2^0,c
   278  007F04                     
   279                           ;Comp_4bit.c: 299:     PORTC = var_buf2;
   280  007F04  C002  FF82         	movff	_var_buf2,3970	;volatile
   281  007F08  0012               	return		;funcret
   282  007F0A                     __end_of_write_outputs:
   283                           	callstack 0
   284                           
   285 ;; *************** function _truth_table *****************
   286 ;; Defined at:
   287 ;;		line 257 in file "Comp_4bit.c"
   288 ;; Parameters:    Size  Location     Type
   289 ;;		None
   290 ;; Auto vars:     Size  Location     Type
   291 ;;		None
   292 ;; Return value:  Size  Location     Type
   293 ;;                  1    wreg      void 
   294 ;; Registers used:
   295 ;;		wreg, status,2, status,0
   296 ;; Tracked objects:
   297 ;;		On entry : 0/0
   298 ;;		On exit  : 0/0
   299 ;;		Unchanged: 0/0
   300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   301 ;;      Params:         0       0       0       0       0       0       0
   302 ;;      Locals:         0       0       0       0       0       0       0
   303 ;;      Temps:          0       0       0       0       0       0       0
   304 ;;      Totals:         0       0       0       0       0       0       0
   305 ;;Total ram usage:        0 bytes
   306 ;; Hardware stack levels used: 1
   307 ;; This function calls:
   308 ;;		Nothing
   309 ;; This function is called by:
   310 ;;		_main
   311 ;; This function uses a non-reentrant model
   312 ;;
   313                           
   314                           	psect	text2
   315  007F0A                     __ptext2:
   316                           	callstack 0
   317  007F0A                     _truth_table:
   318                           	callstack 30
   319  007F0A                     
   320                           ;Comp_4bit.c: 260:     if (Var_A > Var_B)
   321  007F0A  5008               	movf	_Var_A^0,w,c
   322  007F0C  5C07               	subwf	_Var_B^0,w,c
   323  007F0E  B0D8               	btfsc	status,0,c
   324  007F10  EF8C  F03F         	goto	u11
   325  007F14  EF8E  F03F         	goto	u10
   326  007F18                     u11:
   327  007F18  EF96  F03F         	goto	l761
   328  007F1C                     u10:
   329  007F1C                     
   330                           ;Comp_4bit.c: 261:     {;Comp_4bit.c: 262:         Var_GT = '1';
   331  007F1C  0E31               	movlw	49
   332  007F1E  6E0B               	movwf	_Var_GT^0,c
   333                           
   334                           ;Comp_4bit.c: 263:         Var_EQ = '0';
   335  007F20  0E30               	movlw	48
   336  007F22  6E0A               	movwf	_Var_EQ^0,c
   337                           
   338                           ;Comp_4bit.c: 264:         Var_LT = '0';
   339  007F24  0E30               	movlw	48
   340  007F26  6E09               	movwf	_Var_LT^0,c
   341                           
   342                           ;Comp_4bit.c: 265:     }
   343  007F28  EFB6  F03F         	goto	l72
   344  007F2C                     l761:
   345  007F2C  5007               	movf	_Var_B^0,w,c
   346  007F2E  5C08               	subwf	_Var_A^0,w,c
   347  007F30  B0D8               	btfsc	status,0,c
   348  007F32  EF9D  F03F         	goto	u21
   349  007F36  EF9F  F03F         	goto	u20
   350  007F3A                     u21:
   351  007F3A  EFA7  F03F         	goto	l765
   352  007F3E                     u20:
   353  007F3E                     
   354                           ;Comp_4bit.c: 267:     {;Comp_4bit.c: 268:         Var_GT = '0';
   355  007F3E  0E30               	movlw	48
   356  007F40  6E0B               	movwf	_Var_GT^0,c
   357                           
   358                           ;Comp_4bit.c: 269:         Var_EQ = '0';
   359  007F42  0E30               	movlw	48
   360  007F44  6E0A               	movwf	_Var_EQ^0,c
   361                           
   362                           ;Comp_4bit.c: 270:         Var_LT = '1';
   363  007F46  0E31               	movlw	49
   364  007F48  6E09               	movwf	_Var_LT^0,c
   365                           
   366                           ;Comp_4bit.c: 271:     }
   367  007F4A  EFB6  F03F         	goto	l72
   368  007F4E                     l765:
   369  007F4E  5007               	movf	_Var_B^0,w,c
   370  007F50  1808               	xorwf	_Var_A^0,w,c
   371  007F52  A4D8               	btfss	status,2,c
   372  007F54  EFAE  F03F         	goto	u31
   373  007F58  EFB0  F03F         	goto	u30
   374  007F5C                     u31:
   375  007F5C  EFB6  F03F         	goto	l72
   376  007F60                     u30:
   377  007F60                     
   378                           ;Comp_4bit.c: 273:     {;Comp_4bit.c: 274:         Var_GT = Var_Gi;
   379  007F60  C006  F00B         	movff	_Var_Gi,_Var_GT
   380                           
   381                           ;Comp_4bit.c: 275:         Var_EQ = Var_Ei;
   382  007F64  C005  F00A         	movff	_Var_Ei,_Var_EQ
   383                           
   384                           ;Comp_4bit.c: 276:         Var_LT = Var_Li;
   385  007F68  C004  F009         	movff	_Var_Li,_Var_LT
   386  007F6C                     l72:
   387  007F6C  0012               	return		;funcret
   388  007F6E                     __end_of_truth_table:
   389                           	callstack 0
   390                           
   391 ;; *************** function _read_inputs *****************
   392 ;; Defined at:
   393 ;;		line 222 in file "Comp_4bit.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   407 ;;      Params:         0       0       0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; This function calls:
   414 ;;		Nothing
   415 ;; This function is called by:
   416 ;;		_main
   417 ;; This function uses a non-reentrant model
   418 ;;
   419                           
   420                           	psect	text3
   421  007F6E                     __ptext3:
   422                           	callstack 0
   423  007F6E                     _read_inputs:
   424                           	callstack 30
   425  007F6E  5081               	movf	129,w,c	;volatile
   426  007F70  0BF8               	andlw	248
   427  007F72  6E03               	movwf	_var_buf^0,c
   428  007F74  5003               	movf	_var_buf^0,w,c
   429  007F76  0B20               	andlw	32
   430  007F78  6E02               	movwf	_var_buf2^0,c
   431  007F7A  3802               	swapf	_var_buf2^0,w,c
   432  007F7C  42E8               	rrncf	wreg,f,c
   433  007F7E  0B07               	andlw	7
   434  007F80  6E06               	movwf	_Var_Gi^0,c
   435  007F82  5003               	movf	_var_buf^0,w,c
   436  007F84  0B10               	andlw	16
   437  007F86  6E02               	movwf	_var_buf2^0,c
   438  007F88  3802               	swapf	_var_buf2^0,w,c
   439  007F8A  0B0F               	andlw	15
   440  007F8C  6E05               	movwf	_Var_Ei^0,c
   441  007F8E  5003               	movf	_var_buf^0,w,c
   442  007F90  0B08               	andlw	8
   443  007F92  6E02               	movwf	_var_buf2^0,c
   444  007F94  3802               	swapf	_var_buf2^0,w,c
   445  007F96  46E8               	rlncf	wreg,f,c
   446  007F98  0B1F               	andlw	31
   447  007F9A  6E04               	movwf	_Var_Li^0,c
   448  007F9C  5003               	movf	_var_buf^0,w,c
   449  007F9E  0BC0               	andlw	192
   450  007FA0  6E02               	movwf	_var_buf2^0,c
   451  007FA2  3802               	swapf	_var_buf2^0,w,c
   452  007FA4  0B0F               	andlw	15
   453  007FA6  6E02               	movwf	_var_buf2^0,c
   454  007FA8  5083               	movf	131,w,c	;volatile
   455  007FAA  0B81               	andlw	129
   456  007FAC  6E02               	movwf	_var_buf2^0,c
   457  007FAE  5003               	movf	_var_buf^0,w,c
   458  007FB0  0B80               	andlw	128
   459  007FB2  6E01               	movwf	_var_buf3^0,c
   460  007FB4  4401               	rlncf	_var_buf3^0,w,c
   461  007FB6  46E8               	rlncf	wreg,f,c
   462  007FB8  0B03               	andlw	3
   463  007FBA  6E01               	movwf	_var_buf3^0,c
   464  007FBC  5003               	movf	_var_buf^0,w,c
   465  007FBE  0B01               	andlw	1
   466  007FC0  6E03               	movwf	_var_buf^0,c
   467  007FC2  5003               	movf	_var_buf^0,w,c
   468  007FC4  1002               	iorwf	_var_buf2^0,w,c
   469  007FC6  1001               	iorwf	_var_buf3^0,w,c
   470  007FC8  6E07               	movwf	_Var_B^0,c
   471  007FCA  5082               	movf	130,w,c	;volatile
   472  007FCC  0BC0               	andlw	192
   473  007FCE  6E03               	movwf	_var_buf^0,c
   474  007FD0  5003               	movf	_var_buf^0,w,c
   475  007FD2  0BC0               	andlw	192
   476  007FD4  6E02               	movwf	_var_buf2^0,c
   477  007FD6  3802               	swapf	_var_buf2^0,w,c
   478  007FD8  0B0F               	andlw	15
   479  007FDA  6E02               	movwf	_var_buf2^0,c
   480  007FDC  5080               	movf	128,w,c	;volatile
   481  007FDE  0B81               	andlw	129
   482  007FE0  6E02               	movwf	_var_buf2^0,c
   483  007FE2  5003               	movf	_var_buf^0,w,c
   484  007FE4  0B80               	andlw	128
   485  007FE6  6E01               	movwf	_var_buf3^0,c
   486  007FE8  4401               	rlncf	_var_buf3^0,w,c
   487  007FEA  46E8               	rlncf	wreg,f,c
   488  007FEC  0B03               	andlw	3
   489  007FEE  6E01               	movwf	_var_buf3^0,c
   490  007FF0  5003               	movf	_var_buf^0,w,c
   491  007FF2  0B01               	andlw	1
   492  007FF4  6E03               	movwf	_var_buf^0,c
   493  007FF6  5003               	movf	_var_buf^0,w,c
   494  007FF8  1002               	iorwf	_var_buf2^0,w,c
   495  007FFA  1001               	iorwf	_var_buf3^0,w,c
   496  007FFC  6E08               	movwf	_Var_A^0,c
   497  007FFE  0012               	return		;funcret
   498  008000                     __end_of_read_inputs:
   499                           	callstack 0
   500                           
   501 ;; *************** function _init_system *****************
   502 ;; Defined at:
   503 ;;		line 73 in file "Comp_4bit.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, status,2
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   517 ;;      Params:         0       0       0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0
   520 ;;      Totals:         0       0       0       0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels used: 1
   523 ;; This function calls:
   524 ;;		Nothing
   525 ;; This function is called by:
   526 ;;		_main
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           	psect	text4
   531  007E7C                     __ptext4:
   532                           	callstack 0
   533  007E7C                     _init_system:
   534                           	callstack 30
   535  007E7C  0E00               	movlw	0
   536  007E7E  6E80               	movwf	128,c	;volatile
   537  007E80  0E00               	movlw	0
   538  007E82  6E89               	movwf	137,c	;volatile
   539  007E84  0E0F               	movlw	15
   540  007E86  6EC1               	movwf	193,c	;volatile
   541  007E88  0E30               	movlw	48
   542  007E8A  6E92               	movwf	146,c	;volatile
   543  007E8C  0E00               	movlw	0
   544  007E8E  6E80               	movwf	128,c	;volatile
   545  007E90  0E00               	movlw	0
   546  007E92  6E8A               	movwf	138,c	;volatile
   547  007E94  0EC0               	movlw	192
   548  007E96  6E93               	movwf	147,c	;volatile
   549  007E98  0E00               	movlw	0
   550  007E9A  6E81               	movwf	129,c	;volatile
   551  007E9C  0E00               	movlw	0
   552  007E9E  6E8A               	movwf	138,c	;volatile
   553  007EA0  0EF8               	movlw	248
   554  007EA2  6E93               	movwf	147,c	;volatile
   555  007EA4  0E00               	movlw	0
   556  007EA6  6E82               	movwf	130,c	;volatile
   557  007EA8  0E00               	movlw	0
   558  007EAA  6E8A               	movwf	138,c	;volatile
   559  007EAC  0EC0               	movlw	192
   560  007EAE  6E93               	movwf	147,c	;volatile
   561  007EB0  0E00               	movlw	0
   562  007EB2  6E83               	movwf	131,c	;volatile
   563  007EB4  0E00               	movlw	0
   564  007EB6  6E8A               	movwf	138,c	;volatile
   565  007EB8  0EC0               	movlw	192
   566  007EBA  6E93               	movwf	147,c	;volatile
   567  007EBC  9EF2               	bcf	4082,7,c	;volatile
   568  007EBE  0012               	return		;funcret
   569  007EC0                     __end_of_init_system:
   570                           	callstack 0
   571  0000                     
   572                           	psect	rparam
   573  0000                     
   574                           	psect	idloc
   575                           
   576                           ;Config register IDLOC0 @ 0x200000
   577                           ;	unspecified, using default values
   578  200000                     	org	2097152
   579  200000  FF                 	db	255
   580                           
   581                           ;Config register IDLOC1 @ 0x200001
   582                           ;	unspecified, using default values
   583  200001                     	org	2097153
   584  200001  FF                 	db	255
   585                           
   586                           ;Config register IDLOC2 @ 0x200002
   587                           ;	unspecified, using default values
   588  200002                     	org	2097154
   589  200002  FF                 	db	255
   590                           
   591                           ;Config register IDLOC3 @ 0x200003
   592                           ;	unspecified, using default values
   593  200003                     	org	2097155
   594  200003  FF                 	db	255
   595                           
   596                           ;Config register IDLOC4 @ 0x200004
   597                           ;	unspecified, using default values
   598  200004                     	org	2097156
   599  200004  FF                 	db	255
   600                           
   601                           ;Config register IDLOC5 @ 0x200005
   602                           ;	unspecified, using default values
   603  200005                     	org	2097157
   604  200005  FF                 	db	255
   605                           
   606                           ;Config register IDLOC6 @ 0x200006
   607                           ;	unspecified, using default values
   608  200006                     	org	2097158
   609  200006  FF                 	db	255
   610                           
   611                           ;Config register IDLOC7 @ 0x200007
   612                           ;	unspecified, using default values
   613  200007                     	org	2097159
   614  200007  FF                 	db	255
   615                           
   616                           	psect	config
   617                           
   618                           ; Padding undefined space
   619  300000                     	org	3145728
   620  300000  FF                 	db	255
   621                           
   622                           ;Config register CONFIG1H @ 0x300001
   623                           ;	Oscillator Selection bits
   624                           ;	OSC = XT, XT oscillator
   625                           ;	Fail-Safe Clock Monitor Enable bit
   626                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   627                           ;	Internal/External Oscillator Switchover bit
   628                           ;	IESO = OFF, Oscillator Switchover mode disabled
   629  300001                     	org	3145729
   630  300001  01                 	db	1
   631                           
   632                           ;Config register CONFIG2L @ 0x300002
   633                           ;	Power-up Timer Enable bit
   634                           ;	PWRT = ON, PWRT enabled
   635                           ;	Brown-out Reset Enable bits
   636                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   637                           ;	Brown Out Reset Voltage bits
   638                           ;	BORV = 3, Minimum setting
   639  300002                     	org	3145730
   640  300002  1E                 	db	30
   641                           
   642                           ;Config register CONFIG2H @ 0x300003
   643                           ;	Watchdog Timer Enable bit
   644                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   645                           ;	Watchdog Timer Postscale Select bits
   646                           ;	WDTPS = 32768, 1:32768
   647  300003                     	org	3145731
   648  300003  1E                 	db	30
   649                           
   650                           ; Padding undefined space
   651  300004                     	org	3145732
   652  300004  FF                 	db	255
   653                           
   654                           ;Config register CONFIG3H @ 0x300005
   655                           ;	CCP2 MUX bit
   656                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   657                           ;	PORTB A/D Enable bit
   658                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   659                           ;	Low-Power Timer1 Oscillator Enable bit
   660                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   661                           ;	MCLR Pin Enable bit
   662                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   663  300005                     	org	3145733
   664  300005  81                 	db	129
   665                           
   666                           ;Config register CONFIG4L @ 0x300006
   667                           ;	Stack Full/Underflow Reset Enable bit
   668                           ;	STVREN = ON, Stack full/underflow will cause Reset
   669                           ;	Single-Supply ICSP Enable bit
   670                           ;	LVP = OFF, Single-Supply ICSP disabled
   671                           ;	Extended Instruction Set Enable bit
   672                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   673                           ;	Background Debugger Enable bit
   674                           ;	DEBUG = 0x1, unprogrammed default
   675  300006                     	org	3145734
   676  300006  81                 	db	129
   677                           
   678                           ; Padding undefined space
   679  300007                     	org	3145735
   680  300007  FF                 	db	255
   681                           
   682                           ;Config register CONFIG5L @ 0x300008
   683                           ;	Code Protection bit
   684                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   685                           ;	Code Protection bit
   686                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   687                           ;	Code Protection bit
   688                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   689                           ;	Code Protection bit
   690                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   691  300008                     	org	3145736
   692  300008  0F                 	db	15
   693                           
   694                           ;Config register CONFIG5H @ 0x300009
   695                           ;	Boot Block Code Protection bit
   696                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   697                           ;	Data EEPROM Code Protection bit
   698                           ;	CPD = OFF, Data EEPROM not code-protected
   699  300009                     	org	3145737
   700  300009  C0                 	db	192
   701                           
   702                           ;Config register CONFIG6L @ 0x30000A
   703                           ;	Write Protection bit
   704                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   705                           ;	Write Protection bit
   706                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   707                           ;	Write Protection bit
   708                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   709                           ;	Write Protection bit
   710                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   711  30000A                     	org	3145738
   712  30000A  0F                 	db	15
   713                           
   714                           ;Config register CONFIG6H @ 0x30000B
   715                           ;	Configuration Register Write Protection bit
   716                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   717                           ;	Boot Block Write Protection bit
   718                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   719                           ;	Data EEPROM Write Protection bit
   720                           ;	WRTD = OFF, Data EEPROM not write-protected
   721  30000B                     	org	3145739
   722  30000B  E0                 	db	224
   723                           
   724                           ;Config register CONFIG7L @ 0x30000C
   725                           ;	Table Read Protection bit
   726                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   727                           ;	Table Read Protection bit
   728                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   729                           ;	Table Read Protection bit
   730                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   731                           ;	Table Read Protection bit
   732                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   733  30000C                     	org	3145740
   734  30000C  0F                 	db	15
   735                           
   736                           ;Config register CONFIG7H @ 0x30000D
   737                           ;	Boot Block Table Read Protection bit
   738                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   739  30000D                     	org	3145741
   740  30000D  40                 	db	64
   741                           tosu	equ	0xFFF
   742                           tosh	equ	0xFFE
   743                           tosl	equ	0xFFD
   744                           stkptr	equ	0xFFC
   745                           pclatu	equ	0xFFB
   746                           pclath	equ	0xFFA
   747                           pcl	equ	0xFF9
   748                           tblptru	equ	0xFF8
   749                           tblptrh	equ	0xFF7
   750                           tblptrl	equ	0xFF6
   751                           tablat	equ	0xFF5
   752                           prodh	equ	0xFF4
   753                           prodl	equ	0xFF3
   754                           indf0	equ	0xFEF
   755                           postinc0	equ	0xFEE
   756                           postdec0	equ	0xFED
   757                           preinc0	equ	0xFEC
   758                           plusw0	equ	0xFEB
   759                           fsr0h	equ	0xFEA
   760                           fsr0l	equ	0xFE9
   761                           wreg	equ	0xFE8
   762                           indf1	equ	0xFE7
   763                           postinc1	equ	0xFE6
   764                           postdec1	equ	0xFE5
   765                           preinc1	equ	0xFE4
   766                           plusw1	equ	0xFE3
   767                           fsr1h	equ	0xFE2
   768                           fsr1l	equ	0xFE1
   769                           bsr	equ	0xFE0
   770                           indf2	equ	0xFDF
   771                           postinc2	equ	0xFDE
   772                           postdec2	equ	0xFDD
   773                           preinc2	equ	0xFDC
   774                           plusw2	equ	0xFDB
   775                           fsr2h	equ	0xFDA
   776                           fsr2l	equ	0xFD9
   777                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      0      11
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                        _init_system
                        _read_inputs
                        _truth_table
                      _write_outputs
 ---------------------------------------------------------------------------------
 (1) _write_outputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _truth_table                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_inputs                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_system                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_system
   _read_inputs
   _truth_table
   _write_outputs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      0       B       1        8.7%
BITBIGSFRhhl        30      0       0      17        0.0%
BITBIGSFRhlh        2D      0       0      18        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRhll         7      0       0      19        0.0%
BITBIGSFRl           5      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      21        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue May 17 19:45:15 2022

                     l61 7EBE                       l64 7FFE                       l72 7F6C  
                     l75 7F08                       u10 7F1C                       u11 7F18  
                     u20 7F3E                       u21 7F3A                       u30 7F60  
                     u31 7F5C                      l751 7E7C                      l753 7EBC  
                    l761 7F2C                      l755 7F6E                      l763 7F3E  
                    l771 7ED4                      l765 7F4E                      l757 7F0A  
                    l773 7EEC                      l781 7E6C                      l767 7F60  
                    l759 7F1C                      l775 7F04                      l783 7E70  
                    l769 7EC0                      l777 7E64                      l779 7E68  
                    _GIE 007F97                      wreg 000FE8                     _LATA 000F89  
                   _LATB 000F8A                     _main 7E64                     start 0000  
           ___param_bank 000000                    ?_main 0000                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _Var_A 0008  
                  _Var_B 0007              _truth_table 7F0A             ?_init_system 0000  
           ?_read_inputs 0000                    status 000FD8          __initialization 7E58  
           __end_of_main 7E7C                   ??_main 0000            __activetblptr 000000  
                 _ADCON1 000FC1                   _Var_EQ 000A                   _Var_GT 000B  
                 _Var_LT 0009                   _Var_Ei 0005                   _Var_Gi 0006  
                 _Var_Li 0004                   isa$std 000001               __accesstop 0080  
__end_of__initialization 7E5E            ___rparam_used 000001           __pcstackCOMRAM 0000  
             __pnvCOMRAM 0001             ?_truth_table 0000                  __Hparam 0000  
                __Lparam 0000            _write_outputs 7EC0                  __pcinit 7E58  
                __ramtop 0600                  __ptext0 7E64                  __ptext1 7EC0  
                __ptext2 7F0A                  __ptext3 7F6E                  __ptext4 7E7C  
                _var_buf 0003     end_of_initialization 7E5E           ?_write_outputs 0000  
    start_initialization 7E58          ??_write_outputs 0000              __pbssCOMRAM 0009  
          ??_init_system 0000            ??_read_inputs 0000      __end_of_init_system 7EC0  
    __end_of_read_inputs 8000                 __Hrparam 0000                 __Lrparam 0000  
            _init_system 7E7C              _read_inputs 7F6E                 _var_buf2 0002  
               _var_buf3 0001                 isa$xinst 000000            ??_truth_table 0000  
  __end_of_write_outputs 7F0A      __end_of_truth_table 7F6E  
