

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue May 24 18:11:22 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.40
    25                           ; Generated 17/11/2021 GMT
    26                           ; 
    27                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F4520 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     
    60                           	psect	idataCOMRAM
    61  00034C                     __pidataCOMRAM:
    62                           	callstack 0
    63                           
    64                           ;initializer for _current_state
    65  00034C  41                 	db	65
    66  0000                     _PEIE	set	32662
    67  0000                     _INT0IE	set	32660
    68  0000                     _INT0IF	set	32657
    69  0000                     _PORTB	set	3969
    70  0000                     _GIE	set	32663
    71  0000                     _PORTD	set	3971
    72  0000                     _LATB	set	3978
    73  0000                     _ADCON1	set	4033
    74  0000                     _IPEN	set	32391
    75  0000                     _INTEDG0	set	32654
    76  0000                     _LATD	set	3980
    77  0000                     _TRISB	set	3987
    78  0000                     _TRISD	set	3989
    79                           
    80                           ; #config settings
    81                           
    82                           	psect	cinit
    83  0002DA                     __pcinit:
    84                           	callstack 0
    85  0002DA                     start_initialization:
    86                           	callstack 0
    87  0002DA                     __initialization:
    88                           	callstack 0
    89                           
    90                           ; Initialize objects allocated to COMRAM (1 bytes)
    91                           ; load TBLPTR registers with __pidataCOMRAM
    92  0002DA  0E4C               	movlw	low __pidataCOMRAM
    93  0002DC  6EF6               	movwf	tblptrl,c
    94  0002DE  0E03               	movlw	high __pidataCOMRAM
    95  0002E0  6EF7               	movwf	tblptrh,c
    96  0002E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    97  0002E4  6EF8               	movwf	tblptru,c
    98  0002E6  0009               	tblrd		*+	;fetch initializer
    99  0002E8  CFF5 F006          	movff	tablat,__pdataCOMRAM
   100                           
   101                           ; Clear objects allocated to COMRAM (5 bytes)
   102  0002EC  6A05               	clrf	(__pbssCOMRAM+4)& (0+255),c
   103  0002EE  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
   104  0002F0  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
   105  0002F2  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
   106  0002F4  6A01               	clrf	__pbssCOMRAM& (0+255),c
   107  0002F6                     end_of_initialization:
   108                           	callstack 0
   109  0002F6                     __end_of__initialization:
   110                           	callstack 0
   111  0002F6  9008               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   112  0002F8  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   113  0002FA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   114  0002FC  6EF8               	movwf	tblptru,c
   115  0002FE  0100               	movlb	0
   116  000300  EF3A  F001         	goto	_main	;jump to C main() function
   117                           
   118                           	psect	bssCOMRAM
   119  000001                     __pbssCOMRAM:
   120                           	callstack 0
   121  000001                     _Var_CLK_Flag:
   122                           	callstack 0
   123  000001                     	ds	1
   124  000002                     _Var_data:
   125                           	callstack 0
   126  000002                     	ds	1
   127  000003                     _Var_BCD_code:
   128                           	callstack 0
   129  000003                     	ds	1
   130  000004                     _Var_TC10:
   131                           	callstack 0
   132  000004                     	ds	1
   133  000005                     _Var_CE:
   134                           	callstack 0
   135  000005                     	ds	1
   136                           
   137                           	psect	dataCOMRAM
   138  000006                     __pdataCOMRAM:
   139                           	callstack 0
   140  000006                     _current_state:
   141                           	callstack 0
   142  000006                     	ds	1
   143                           
   144                           	psect	cstackCOMRAM
   145  000007                     __pcstackCOMRAM:
   146                           	callstack 0
   147  000007                     state_logic@error:
   148                           	callstack 0
   149  000007                     output_logic@error:
   150                           	callstack 0
   151                           
   152                           ; 1 bytes @ 0x0
   153  000007                     	ds	1
   154  000008                     
   155                           ; 1 bytes @ 0x1
   156 ;;
   157 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   158 ;;
   159 ;; *************** function _main *****************
   160 ;; Defined at:
   161 ;;		line 75 in file "../Counter_BCD_1digit/counter_BCD_1digit.c"
   162 ;; Parameters:    Size  Location     Type
   163 ;;		None
   164 ;; Auto vars:     Size  Location     Type
   165 ;;		None
   166 ;; Return value:  Size  Location     Type
   167 ;;                  1    wreg      void 
   168 ;; Registers used:
   169 ;;		wreg, status,2, status,0, cstack
   170 ;; Tracked objects:
   171 ;;		On entry : 0/0
   172 ;;		On exit  : 0/0
   173 ;;		Unchanged: 0/0
   174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   175 ;;      Params:         0       0       0       0       0       0       0
   176 ;;      Locals:         0       0       0       0       0       0       0
   177 ;;      Temps:          0       0       0       0       0       0       0
   178 ;;      Totals:         0       0       0       0       0       0       0
   179 ;;Total ram usage:        0 bytes
   180 ;; Hardware stack levels required when called: 3
   181 ;; This function calls:
   182 ;;		_init_system
   183 ;;		_output_logic
   184 ;;		_state_logic
   185 ;; This function is called by:
   186 ;;		Startup code after reset
   187 ;; This function uses a non-reentrant model
   188 ;;
   189                           
   190                           	psect	text0
   191  000274                     __ptext0:
   192                           	callstack 0
   193  000274                     _main:
   194                           	callstack 28
   195  000274                     
   196                           ;counter_BCD_1digit.c: 76: init_system ();
   197  000274  EC57  F001         	call	_init_system	;wreg free
   198  000278                     l993:
   199                           
   200                           ;counter_BCD_1digit.c: 78: if (state_logic()) break;
   201  000278  EC09  F000         	call	_state_logic	;wreg free
   202  00027C  0900               	iorlw	0
   203  00027E  B4D8               	btfsc	status,2,c
   204  000280  EF44  F001         	goto	u141
   205  000284  EF46  F001         	goto	u140
   206  000288                     u141:
   207  000288  EF48  F001         	goto	l997
   208  00028C                     u140:
   209  00028C  EF52  F001         	goto	l60
   210  000290                     l997:
   211                           
   212                           ;counter_BCD_1digit.c: 79: if (output_logic()) break;
   213  000290  ECC4  F000         	call	_output_logic	;wreg free
   214  000294  0900               	iorlw	0
   215  000296  B4D8               	btfsc	status,2,c
   216  000298  EF50  F001         	goto	u151
   217  00029C  EF52  F001         	goto	u150
   218  0002A0                     u151:
   219  0002A0  EF3C  F001         	goto	l993
   220  0002A4                     u150:
   221  0002A4                     l60:
   222                           
   223                           ;counter_BCD_1digit.c: 82: __nop();
   224  0002A4  F000               	nop	
   225  0002A6  EF52  F001         	goto	l60
   226  0002AA  EF07  F000         	goto	start
   227  0002AE                     __end_of_main:
   228                           	callstack 0
   229                           
   230 ;; *************** function _state_logic *****************
   231 ;; Defined at:
   232 ;;		line 94 in file "../Counter_BCD_1digit/counter_BCD_1digit.c"
   233 ;; Parameters:    Size  Location     Type
   234 ;;		None
   235 ;; Auto vars:     Size  Location     Type
   236 ;;  error           1    0[COMRAM] unsigned char 
   237 ;; Return value:  Size  Location     Type
   238 ;;                  1    wreg      unsigned char 
   239 ;; Registers used:
   240 ;;		wreg, status,2, status,0, cstack
   241 ;; Tracked objects:
   242 ;;		On entry : 0/0
   243 ;;		On exit  : 0/0
   244 ;;		Unchanged: 0/0
   245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   246 ;;      Params:         0       0       0       0       0       0       0
   247 ;;      Locals:         1       0       0       0       0       0       0
   248 ;;      Temps:          0       0       0       0       0       0       0
   249 ;;      Totals:         1       0       0       0       0       0       0
   250 ;;Total ram usage:        1 bytes
   251 ;; Hardware stack levels used: 1
   252 ;; Hardware stack levels required when called: 2
   253 ;; This function calls:
   254 ;;		_read_inputs
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261  000012                     __ptext1:
   262                           	callstack 0
   263  000012                     _state_logic:
   264                           	callstack 28
   265  000012                     
   266                           ;counter_BCD_1digit.c: 95: char error = 0;
   267  000012  0E00               	movlw	0
   268  000014  6E07               	movwf	state_logic@error^0,c
   269  000016                     
   270                           ;counter_BCD_1digit.c: 97: read_inputs();
   271  000016  ECA1  F001         	call	_read_inputs	;wreg free
   272  00001A                     
   273                           ;counter_BCD_1digit.c: 99: if (Var_CLK_Flag == 1){
   274  00001A  0401               	decf	_Var_CLK_Flag^0,w,c
   275  00001C  A4D8               	btfss	status,2,c
   276  00001E  EF13  F000         	goto	u11
   277  000022  EF15  F000         	goto	u10
   278  000026                     u11:
   279  000026  EFC2  F000         	goto	l66
   280  00002A                     u10:
   281  00002A  EF95  F000         	goto	l943
   282  00002E                     l895:
   283                           
   284                           ;counter_BCD_1digit.c: 103: if (Var_CE == 1){
   285  00002E  0405               	decf	_Var_CE^0,w,c
   286  000030  A4D8               	btfss	status,2,c
   287  000032  EF1D  F000         	goto	u21
   288  000036  EF1F  F000         	goto	u20
   289  00003A                     u21:
   290  00003A  EF23  F000         	goto	l899
   291  00003E                     u20:
   292  00003E                     l897:
   293                           
   294                           ;counter_BCD_1digit.c: 104: current_state = 'B';
   295  00003E  0E42               	movlw	66
   296  000040  6E06               	movwf	_current_state^0,c
   297                           
   298                           ;counter_BCD_1digit.c: 105: }
   299  000042  EFC0  F000         	goto	l945
   300  000046                     l899:
   301                           
   302                           ;counter_BCD_1digit.c: 106: else{;counter_BCD_1digit.c: 107: current_state = 'A';
   303  000046  0E41               	movlw	65
   304  000048  6E06               	movwf	_current_state^0,c
   305  00004A  EFC0  F000         	goto	l945
   306  00004E                     l901:
   307                           
   308                           ;counter_BCD_1digit.c: 112: if (Var_CE == 1) current_state = 'C';
   309  00004E  0405               	decf	_Var_CE^0,w,c
   310  000050  A4D8               	btfss	status,2,c
   311  000052  EF2D  F000         	goto	u31
   312  000056  EF2F  F000         	goto	u30
   313  00005A                     u31:
   314  00005A  EF1F  F000         	goto	l897
   315  00005E                     u30:
   316  00005E  0E43               	movlw	67
   317  000060  6E06               	movwf	_current_state^0,c
   318  000062  EFC0  F000         	goto	l945
   319  000066                     l907:
   320                           
   321                           ;counter_BCD_1digit.c: 118: if (Var_CE == 1)
   322  000066  0405               	decf	_Var_CE^0,w,c
   323  000068  A4D8               	btfss	status,2,c
   324  00006A  EF39  F000         	goto	u41
   325  00006E  EF3B  F000         	goto	u40
   326  000072                     u41:
   327  000072  EFC0  F000         	goto	l945
   328  000076                     u40:
   329  000076                     
   330                           ;counter_BCD_1digit.c: 119: current_state = 'D';
   331  000076  0E44               	movlw	68
   332  000078  6E06               	movwf	_current_state^0,c
   333  00007A  EFC0  F000         	goto	l945
   334  00007E                     l911:
   335                           
   336                           ;counter_BCD_1digit.c: 123: if (Var_CE == 1)
   337  00007E  0405               	decf	_Var_CE^0,w,c
   338  000080  A4D8               	btfss	status,2,c
   339  000082  EF45  F000         	goto	u51
   340  000086  EF47  F000         	goto	u50
   341  00008A                     u51:
   342  00008A  EFC0  F000         	goto	l945
   343  00008E                     u50:
   344  00008E                     
   345                           ;counter_BCD_1digit.c: 124: current_state = 'E';
   346  00008E  0E45               	movlw	69
   347  000090  6E06               	movwf	_current_state^0,c
   348  000092  EFC0  F000         	goto	l945
   349  000096                     l915:
   350                           
   351                           ;counter_BCD_1digit.c: 127: if (Var_CE == 1)
   352  000096  0405               	decf	_Var_CE^0,w,c
   353  000098  A4D8               	btfss	status,2,c
   354  00009A  EF51  F000         	goto	u61
   355  00009E  EF53  F000         	goto	u60
   356  0000A2                     u61:
   357  0000A2  EFC0  F000         	goto	l945
   358  0000A6                     u60:
   359  0000A6                     
   360                           ;counter_BCD_1digit.c: 128: current_state = 'F';
   361  0000A6  0E46               	movlw	70
   362  0000A8  6E06               	movwf	_current_state^0,c
   363  0000AA  EFC0  F000         	goto	l945
   364  0000AE                     l919:
   365                           
   366                           ;counter_BCD_1digit.c: 131: if (Var_CE == 1)
   367  0000AE  0405               	decf	_Var_CE^0,w,c
   368  0000B0  A4D8               	btfss	status,2,c
   369  0000B2  EF5D  F000         	goto	u71
   370  0000B6  EF5F  F000         	goto	u70
   371  0000BA                     u71:
   372  0000BA  EFC0  F000         	goto	l945
   373  0000BE                     u70:
   374  0000BE                     
   375                           ;counter_BCD_1digit.c: 132: current_state = 'G';
   376  0000BE  0E47               	movlw	71
   377  0000C0  6E06               	movwf	_current_state^0,c
   378  0000C2  EFC0  F000         	goto	l945
   379  0000C6                     l923:
   380                           
   381                           ;counter_BCD_1digit.c: 135: if (Var_CE == 1)
   382  0000C6  0405               	decf	_Var_CE^0,w,c
   383  0000C8  A4D8               	btfss	status,2,c
   384  0000CA  EF69  F000         	goto	u81
   385  0000CE  EF6B  F000         	goto	u80
   386  0000D2                     u81:
   387  0000D2  EFC0  F000         	goto	l945
   388  0000D6                     u80:
   389  0000D6                     
   390                           ;counter_BCD_1digit.c: 136: current_state = 'H';
   391  0000D6  0E48               	movlw	72
   392  0000D8  6E06               	movwf	_current_state^0,c
   393  0000DA  EFC0  F000         	goto	l945
   394  0000DE                     l927:
   395                           
   396                           ;counter_BCD_1digit.c: 139: if (Var_CE == 1)
   397  0000DE  0405               	decf	_Var_CE^0,w,c
   398  0000E0  A4D8               	btfss	status,2,c
   399  0000E2  EF75  F000         	goto	u91
   400  0000E6  EF77  F000         	goto	u90
   401  0000EA                     u91:
   402  0000EA  EFC0  F000         	goto	l945
   403  0000EE                     u90:
   404  0000EE                     
   405                           ;counter_BCD_1digit.c: 140: current_state = 'I';
   406  0000EE  0E49               	movlw	73
   407  0000F0  6E06               	movwf	_current_state^0,c
   408  0000F2  EFC0  F000         	goto	l945
   409  0000F6                     l931:
   410                           
   411                           ;counter_BCD_1digit.c: 143: if (Var_CE == 1)
   412  0000F6  0405               	decf	_Var_CE^0,w,c
   413  0000F8  A4D8               	btfss	status,2,c
   414  0000FA  EF81  F000         	goto	u101
   415  0000FE  EF83  F000         	goto	u100
   416  000102                     u101:
   417  000102  EFC0  F000         	goto	l945
   418  000106                     u100:
   419  000106                     
   420                           ;counter_BCD_1digit.c: 144: current_state = 'J';
   421  000106  0E4A               	movlw	74
   422  000108  6E06               	movwf	_current_state^0,c
   423  00010A  EFC0  F000         	goto	l945
   424  00010E                     l935:
   425                           
   426                           ;counter_BCD_1digit.c: 147: if (Var_CE == 1)
   427  00010E  0405               	decf	_Var_CE^0,w,c
   428  000110  A4D8               	btfss	status,2,c
   429  000112  EF8D  F000         	goto	u111
   430  000116  EF8F  F000         	goto	u110
   431  00011A                     u111:
   432  00011A  EFC0  F000         	goto	l945
   433  00011E                     u110:
   434  00011E  EF23  F000         	goto	l899
   435  000122                     l939:
   436                           
   437                           ;counter_BCD_1digit.c: 154: error = 1;
   438  000122  0E01               	movlw	1
   439  000124  6E07               	movwf	state_logic@error^0,c
   440                           
   441                           ;counter_BCD_1digit.c: 155: break;
   442  000126  EFC0  F000         	goto	l945
   443  00012A                     l943:
   444  00012A  5006               	movf	_current_state^0,w,c
   445                           
   446                           ; Switch size 1, requested type "simple"
   447                           ; Number of cases is 10, Range of values is 65 to 74
   448                           ; switch strategies available:
   449                           ; Name         Instructions Cycles
   450                           ; simple_byte           31    16 (average)
   451                           ;	Chosen strategy is simple_byte
   452  00012C  0A41               	xorlw	65	; case 65
   453  00012E  B4D8               	btfsc	status,2,c
   454  000130  EF17  F000         	goto	l895
   455  000134  0A03               	xorlw	3	; case 66
   456  000136  B4D8               	btfsc	status,2,c
   457  000138  EF27  F000         	goto	l901
   458  00013C  0A01               	xorlw	1	; case 67
   459  00013E  B4D8               	btfsc	status,2,c
   460  000140  EF33  F000         	goto	l907
   461  000144  0A07               	xorlw	7	; case 68
   462  000146  B4D8               	btfsc	status,2,c
   463  000148  EF3F  F000         	goto	l911
   464  00014C  0A01               	xorlw	1	; case 69
   465  00014E  B4D8               	btfsc	status,2,c
   466  000150  EF4B  F000         	goto	l915
   467  000154  0A03               	xorlw	3	; case 70
   468  000156  B4D8               	btfsc	status,2,c
   469  000158  EF57  F000         	goto	l919
   470  00015C  0A01               	xorlw	1	; case 71
   471  00015E  B4D8               	btfsc	status,2,c
   472  000160  EF63  F000         	goto	l923
   473  000164  0A0F               	xorlw	15	; case 72
   474  000166  B4D8               	btfsc	status,2,c
   475  000168  EF6F  F000         	goto	l927
   476  00016C  0A01               	xorlw	1	; case 73
   477  00016E  B4D8               	btfsc	status,2,c
   478  000170  EF7B  F000         	goto	l931
   479  000174  0A03               	xorlw	3	; case 74
   480  000176  B4D8               	btfsc	status,2,c
   481  000178  EF87  F000         	goto	l935
   482  00017C  EF91  F000         	goto	l939
   483  000180                     l945:
   484                           
   485                           ;counter_BCD_1digit.c: 157: Var_CLK_Flag = 0;
   486  000180  0E00               	movlw	0
   487  000182  6E01               	movwf	_Var_CLK_Flag^0,c
   488  000184                     l66:
   489                           
   490                           ;counter_BCD_1digit.c: 158: };counter_BCD_1digit.c: 159: return (error);
   491  000184  5007               	movf	state_logic@error^0,w,c
   492  000186  0012               	return		;funcret
   493  000188                     __end_of_state_logic:
   494                           	callstack 0
   495                           
   496 ;; *************** function _read_inputs *****************
   497 ;; Defined at:
   498 ;;		line 239 in file "../Counter_BCD_1digit/counter_BCD_1digit.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   512 ;;      Params:         0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0       0       0
   515 ;;      Totals:         0       0       0       0       0       0       0
   516 ;;Total ram usage:        0 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; Hardware stack levels required when called: 1
   519 ;; This function calls:
   520 ;;		Nothing
   521 ;; This function is called by:
   522 ;;		_state_logic
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text2
   527  000342                     __ptext2:
   528                           	callstack 0
   529  000342                     _read_inputs:
   530                           	callstack 28
   531  000342                     
   532                           ;counter_BCD_1digit.c: 242: Var_CE = (PORTB & 0b00000010)>>1;
   533  000342  90D8               	bcf	status,0,c
   534  000344  3081               	rrcf	129,w,c	;volatile
   535  000346  0B01               	andlw	1
   536  000348  6E05               	movwf	_Var_CE^0,c
   537  00034A  0012               	return		;funcret
   538  00034C                     __end_of_read_inputs:
   539                           	callstack 0
   540                           
   541 ;; *************** function _output_logic *****************
   542 ;; Defined at:
   543 ;;		line 165 in file "../Counter_BCD_1digit/counter_BCD_1digit.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;  error           1    0[COMRAM] unsigned char 
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      unsigned char 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   557 ;;      Params:         0       0       0       0       0       0       0
   558 ;;      Locals:         1       0       0       0       0       0       0
   559 ;;      Temps:          0       0       0       0       0       0       0
   560 ;;      Totals:         1       0       0       0       0       0       0
   561 ;;Total ram usage:        1 bytes
   562 ;; Hardware stack levels used: 1
   563 ;; Hardware stack levels required when called: 2
   564 ;; This function calls:
   565 ;;		_write_outputs
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text3
   572  000188                     __ptext3:
   573                           	callstack 0
   574  000188                     _output_logic:
   575                           	callstack 28
   576  000188                     
   577                           ;counter_BCD_1digit.c: 166: unsigned char error = 0;
   578  000188  0E00               	movlw	0
   579  00018A  6E07               	movwf	output_logic@error^0,c
   580                           
   581                           ;counter_BCD_1digit.c: 167: switch (current_state) {
   582  00018C  EFF4  F000         	goto	l975
   583  000190                     l951:
   584                           
   585                           ;counter_BCD_1digit.c: 169: Var_BCD_code = 0;
   586  000190  0E00               	movlw	0
   587  000192  6E03               	movwf	_Var_BCD_code^0,c
   588                           
   589                           ;counter_BCD_1digit.c: 170: break;
   590  000194  EF1F  F001         	goto	l977
   591  000198                     l953:
   592                           
   593                           ;counter_BCD_1digit.c: 172: Var_BCD_code = 1;
   594  000198  0E01               	movlw	1
   595  00019A  6E03               	movwf	_Var_BCD_code^0,c
   596                           
   597                           ;counter_BCD_1digit.c: 173: break;
   598  00019C  EF1F  F001         	goto	l977
   599  0001A0                     l955:
   600                           
   601                           ;counter_BCD_1digit.c: 175: Var_BCD_code = 2;
   602  0001A0  0E02               	movlw	2
   603  0001A2  6E03               	movwf	_Var_BCD_code^0,c
   604                           
   605                           ;counter_BCD_1digit.c: 176: break;
   606  0001A4  EF1F  F001         	goto	l977
   607  0001A8                     l957:
   608                           
   609                           ;counter_BCD_1digit.c: 178: Var_BCD_code = 3;
   610  0001A8  0E03               	movlw	3
   611  0001AA  6E03               	movwf	_Var_BCD_code^0,c
   612                           
   613                           ;counter_BCD_1digit.c: 179: break;
   614  0001AC  EF1F  F001         	goto	l977
   615  0001B0                     l959:
   616                           
   617                           ;counter_BCD_1digit.c: 181: Var_BCD_code = 4;
   618  0001B0  0E04               	movlw	4
   619  0001B2  6E03               	movwf	_Var_BCD_code^0,c
   620                           
   621                           ;counter_BCD_1digit.c: 182: break;
   622  0001B4  EF1F  F001         	goto	l977
   623  0001B8                     l961:
   624                           
   625                           ;counter_BCD_1digit.c: 184: Var_BCD_code = 5;
   626  0001B8  0E05               	movlw	5
   627  0001BA  6E03               	movwf	_Var_BCD_code^0,c
   628                           
   629                           ;counter_BCD_1digit.c: 185: break;
   630  0001BC  EF1F  F001         	goto	l977
   631  0001C0                     l963:
   632                           
   633                           ;counter_BCD_1digit.c: 187: Var_BCD_code = 6;
   634  0001C0  0E06               	movlw	6
   635  0001C2  6E03               	movwf	_Var_BCD_code^0,c
   636                           
   637                           ;counter_BCD_1digit.c: 188: break;
   638  0001C4  EF1F  F001         	goto	l977
   639  0001C8                     l965:
   640                           
   641                           ;counter_BCD_1digit.c: 190: Var_BCD_code = 7;
   642  0001C8  0E07               	movlw	7
   643  0001CA  6E03               	movwf	_Var_BCD_code^0,c
   644                           
   645                           ;counter_BCD_1digit.c: 191: break;
   646  0001CC  EF1F  F001         	goto	l977
   647  0001D0                     l967:
   648                           
   649                           ;counter_BCD_1digit.c: 193: Var_BCD_code = 8;
   650  0001D0  0E08               	movlw	8
   651  0001D2  6E03               	movwf	_Var_BCD_code^0,c
   652                           
   653                           ;counter_BCD_1digit.c: 194: break;
   654  0001D4  EF1F  F001         	goto	l977
   655  0001D8                     l969:
   656                           
   657                           ;counter_BCD_1digit.c: 196: Var_BCD_code = 9;
   658  0001D8  0E09               	movlw	9
   659  0001DA  6E03               	movwf	_Var_BCD_code^0,c
   660                           
   661                           ;counter_BCD_1digit.c: 197: break;
   662  0001DC  EF1F  F001         	goto	l977
   663  0001E0                     l971:
   664                           
   665                           ;counter_BCD_1digit.c: 199: error = 1;
   666  0001E0  0E01               	movlw	1
   667  0001E2  6E07               	movwf	output_logic@error^0,c
   668                           
   669                           ;counter_BCD_1digit.c: 201: break;
   670  0001E4  EF1F  F001         	goto	l977
   671  0001E8                     l975:
   672  0001E8  5006               	movf	_current_state^0,w,c
   673                           
   674                           ; Switch size 1, requested type "simple"
   675                           ; Number of cases is 10, Range of values is 65 to 74
   676                           ; switch strategies available:
   677                           ; Name         Instructions Cycles
   678                           ; simple_byte           31    16 (average)
   679                           ;	Chosen strategy is simple_byte
   680  0001EA  0A41               	xorlw	65	; case 65
   681  0001EC  B4D8               	btfsc	status,2,c
   682  0001EE  EFC8  F000         	goto	l951
   683  0001F2  0A03               	xorlw	3	; case 66
   684  0001F4  B4D8               	btfsc	status,2,c
   685  0001F6  EFCC  F000         	goto	l953
   686  0001FA  0A01               	xorlw	1	; case 67
   687  0001FC  B4D8               	btfsc	status,2,c
   688  0001FE  EFD0  F000         	goto	l955
   689  000202  0A07               	xorlw	7	; case 68
   690  000204  B4D8               	btfsc	status,2,c
   691  000206  EFD4  F000         	goto	l957
   692  00020A  0A01               	xorlw	1	; case 69
   693  00020C  B4D8               	btfsc	status,2,c
   694  00020E  EFD8  F000         	goto	l959
   695  000212  0A03               	xorlw	3	; case 70
   696  000214  B4D8               	btfsc	status,2,c
   697  000216  EFDC  F000         	goto	l961
   698  00021A  0A01               	xorlw	1	; case 71
   699  00021C  B4D8               	btfsc	status,2,c
   700  00021E  EFE0  F000         	goto	l963
   701  000222  0A0F               	xorlw	15	; case 72
   702  000224  B4D8               	btfsc	status,2,c
   703  000226  EFE4  F000         	goto	l965
   704  00022A  0A01               	xorlw	1	; case 73
   705  00022C  B4D8               	btfsc	status,2,c
   706  00022E  EFE8  F000         	goto	l967
   707  000232  0A03               	xorlw	3	; case 74
   708  000234  B4D8               	btfsc	status,2,c
   709  000236  EFEC  F000         	goto	l969
   710  00023A  EFF0  F000         	goto	l971
   711  00023E                     l977:
   712                           
   713                           ;counter_BCD_1digit.c: 204: if (current_state == 'J' && Var_CE == 1)
   714  00023E  0E4A               	movlw	74
   715  000240  1806               	xorwf	_current_state^0,w,c
   716  000242  A4D8               	btfss	status,2,c
   717  000244  EF26  F001         	goto	u121
   718  000248  EF28  F001         	goto	u120
   719  00024C                     u121:
   720  00024C  EF34  F001         	goto	l983
   721  000250                     u120:
   722  000250  0405               	decf	_Var_CE^0,w,c
   723  000252  A4D8               	btfss	status,2,c
   724  000254  EF2E  F001         	goto	u131
   725  000258  EF30  F001         	goto	u130
   726  00025C                     u131:
   727  00025C  EF34  F001         	goto	l983
   728  000260                     u130:
   729  000260                     
   730                           ;counter_BCD_1digit.c: 205: Var_TC10 = 1;
   731  000260  0E01               	movlw	1
   732  000262  6E04               	movwf	_Var_TC10^0,c
   733  000264  EF36  F001         	goto	l985
   734  000268                     l983:
   735                           
   736                           ;counter_BCD_1digit.c: 206: else;counter_BCD_1digit.c: 207: Var_TC10 = 0;
   737  000268  0E00               	movlw	0
   738  00026A  6E04               	movwf	_Var_TC10^0,c
   739  00026C                     l985:
   740                           
   741                           ;counter_BCD_1digit.c: 209: write_outputs();
   742  00026C  EC82  F001         	call	_write_outputs	;wreg free
   743  000270                     
   744                           ;counter_BCD_1digit.c: 212: return (error);
   745  000270  5007               	movf	output_logic@error^0,w,c
   746  000272  0012               	return		;funcret
   747  000274                     __end_of_output_logic:
   748                           	callstack 0
   749                           
   750 ;; *************** function _write_outputs *****************
   751 ;; Defined at:
   752 ;;		line 250 in file "../Counter_BCD_1digit/counter_BCD_1digit.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;		None
   755 ;; Auto vars:     Size  Location     Type
   756 ;;		None
   757 ;; Return value:  Size  Location     Type
   758 ;;                  1    wreg      void 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/0
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   766 ;;      Params:         0       0       0       0       0       0       0
   767 ;;      Locals:         0       0       0       0       0       0       0
   768 ;;      Temps:          0       0       0       0       0       0       0
   769 ;;      Totals:         0       0       0       0       0       0       0
   770 ;;Total ram usage:        0 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; Hardware stack levels required when called: 1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_output_logic
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text4
   781  000304                     __ptext4:
   782                           	callstack 0
   783  000304                     _write_outputs:
   784                           	callstack 28
   785  000304                     
   786                           ;counter_BCD_1digit.c: 254: Var_data = PORTB & 0b11111011;
   787  000304  5081               	movf	129,w,c	;volatile
   788  000306  0BFB               	andlw	251
   789  000308  6E02               	movwf	_Var_data^0,c
   790                           
   791                           ;counter_BCD_1digit.c: 257: PORTB = Var_data | (Var_TC10 << 2);
   792  00030A  4404               	rlncf	_Var_TC10^0,w,c
   793  00030C  46E8               	rlncf	wreg,f,c
   794  00030E  0BFC               	andlw	252
   795  000310  1002               	iorwf	_Var_data^0,w,c
   796  000312  6E81               	movwf	129,c	;volatile
   797                           
   798                           ;counter_BCD_1digit.c: 260: Var_data = PORTD & 0b00001111;
   799  000314  5083               	movf	131,w,c	;volatile
   800  000316  0B0F               	andlw	15
   801  000318  6E02               	movwf	_Var_data^0,c
   802                           
   803                           ;counter_BCD_1digit.c: 261: PORTD = Var_data | (Var_BCD_code << 4);
   804  00031A  3803               	swapf	_Var_BCD_code^0,w,c
   805  00031C  0BF0               	andlw	240
   806  00031E  1002               	iorwf	_Var_data^0,w,c
   807  000320  6E83               	movwf	131,c	;volatile
   808  000322  0012               	return		;funcret
   809  000324                     __end_of_write_outputs:
   810                           	callstack 0
   811                           
   812 ;; *************** function _init_system *****************
   813 ;; Defined at:
   814 ;;		line 269 in file "../Counter_BCD_1digit/counter_BCD_1digit.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   828 ;;      Params:         0       0       0       0       0       0       0
   829 ;;      Locals:         0       0       0       0       0       0       0
   830 ;;      Temps:          0       0       0       0       0       0       0
   831 ;;      Totals:         0       0       0       0       0       0       0
   832 ;;Total ram usage:        0 bytes
   833 ;; Hardware stack levels used: 1
   834 ;; Hardware stack levels required when called: 1
   835 ;; This function calls:
   836 ;;		Nothing
   837 ;; This function is called by:
   838 ;;		_main
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text5
   843  0002AE                     __ptext5:
   844                           	callstack 0
   845  0002AE                     _init_system:
   846                           	callstack 29
   847  0002AE                     
   848                           ;counter_BCD_1digit.c: 380: ADCON1 = 0x0F;
   849  0002AE  0E0F               	movlw	15
   850  0002B0  6EC1               	movwf	193,c	;volatile
   851                           
   852                           ;counter_BCD_1digit.c: 383: PORTB = 0x00;
   853  0002B2  0E00               	movlw	0
   854  0002B4  6E81               	movwf	129,c	;volatile
   855                           
   856                           ;counter_BCD_1digit.c: 384: LATB = 0x00;
   857  0002B6  0E00               	movlw	0
   858  0002B8  6E8A               	movwf	138,c	;volatile
   859                           
   860                           ;counter_BCD_1digit.c: 385: TRISB = 0b00000011;
   861  0002BA  0E03               	movlw	3
   862  0002BC  6E93               	movwf	147,c	;volatile
   863                           
   864                           ;counter_BCD_1digit.c: 387: PORTD = 0x00;
   865  0002BE  0E00               	movlw	0
   866  0002C0  6E83               	movwf	131,c	;volatile
   867                           
   868                           ;counter_BCD_1digit.c: 388: LATD = 0x00;
   869  0002C2  0E00               	movlw	0
   870  0002C4  6E8C               	movwf	140,c	;volatile
   871                           
   872                           ;counter_BCD_1digit.c: 389: TRISD = 0b00000000;
   873  0002C6  0E00               	movlw	0
   874  0002C8  6E95               	movwf	149,c	;volatile
   875  0002CA                     
   876                           ;counter_BCD_1digit.c: 394: INTEDG0 = 0;
   877  0002CA  9CF1               	bcf	4081,6,c	;volatile
   878  0002CC                     
   879                           ;counter_BCD_1digit.c: 395: INT0IE = 1;
   880  0002CC  88F2               	bsf	4082,4,c	;volatile
   881  0002CE                     
   882                           ;counter_BCD_1digit.c: 397: IPEN = 0;
   883  0002CE  9ED0               	bcf	4048,7,c	;volatile
   884  0002D0                     
   885                           ;counter_BCD_1digit.c: 398: PEIE = 0;
   886  0002D0  9CF2               	bcf	4082,6,c	;volatile
   887  0002D2                     
   888                           ;counter_BCD_1digit.c: 399: GIE = 1;
   889  0002D2  8EF2               	bsf	4082,7,c	;volatile
   890                           
   891                           ;counter_BCD_1digit.c: 401: Var_CLK_Flag = 0;
   892  0002D4  0E00               	movlw	0
   893  0002D6  6E01               	movwf	_Var_CLK_Flag^0,c
   894  0002D8  0012               	return		;funcret
   895  0002DA                     __end_of_init_system:
   896                           	callstack 0
   897                           
   898 ;; *************** function _ISR *****************
   899 ;; Defined at:
   900 ;;		line 220 in file "../Counter_BCD_1digit/counter_BCD_1digit.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   914 ;;      Params:         0       0       0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		Interrupt level 2
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           	psect	intcode
   928  000008                     __pintcode:
   929                           	callstack 0
   930  000008                     _ISR:
   931                           	callstack 28
   932                           
   933                           ;incstack = 0
   934  000008  8208               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   935  00000A  ED92  F001         	call	int_func,f	;refresh shadow registers
   936                           
   937                           	psect	intcode_body
   938  000324                     __pintcode_body:
   939                           	callstack 28
   940  000324                     int_func:
   941                           	callstack 28
   942  000324  0006               	pop		; remove dummy address from shadow register refresh
   943  000326                     
   944                           ;counter_BCD_1digit.c: 221: GIE = 0;
   945  000326  9EF2               	bcf	4082,7,c	;volatile
   946                           
   947                           ;counter_BCD_1digit.c: 222: if(INT0IF == 1) {
   948  000328  A2F2               	btfss	4082,1,c	;volatile
   949  00032A  EF99  F001         	goto	i2u16_41
   950  00032E  EF9B  F001         	goto	i2u16_40
   951  000332                     i2u16_41:
   952  000332  EF9E  F001         	goto	i2l1007
   953  000336                     i2u16_40:
   954  000336                     
   955                           ;counter_BCD_1digit.c: 227: Var_CLK_Flag = 1;
   956  000336  0E01               	movlw	1
   957  000338  6E01               	movwf	_Var_CLK_Flag^0,c
   958  00033A                     
   959                           ;counter_BCD_1digit.c: 228: INT0IF = 0;
   960  00033A  92F2               	bcf	4082,1,c	;volatile
   961  00033C                     i2l1007:
   962                           
   963                           ;counter_BCD_1digit.c: 229: };counter_BCD_1digit.c: 230: GIE = 1;
   964  00033C  8EF2               	bsf	4082,7,c	;volatile
   965  00033E  9208               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   966  000340  0011               	retfie		f
   967  000342                     __end_of_ISR:
   968                           	callstack 0
   969  0000                     
   970                           	psect	rparam
   971  0000                     
   972                           	psect	temp
   973  000008                     btemp:
   974                           	callstack 0
   975  000008                     	ds	1
   976  0000                     int$flags	set	btemp
   977  0000                     wtemp8	set	btemp+1
   978  0000                     ttemp5	set	btemp+1
   979  0000                     ttemp6	set	btemp+4
   980  0000                     ttemp7	set	btemp+8
   981                           
   982                           	psect	idloc
   983                           
   984                           ;Config register IDLOC0 @ 0x200000
   985                           ;	unspecified, using default values
   986  200000                     	org	2097152
   987  200000  FF                 	db	255
   988                           
   989                           ;Config register IDLOC1 @ 0x200001
   990                           ;	unspecified, using default values
   991  200001                     	org	2097153
   992  200001  FF                 	db	255
   993                           
   994                           ;Config register IDLOC2 @ 0x200002
   995                           ;	unspecified, using default values
   996  200002                     	org	2097154
   997  200002  FF                 	db	255
   998                           
   999                           ;Config register IDLOC3 @ 0x200003
  1000                           ;	unspecified, using default values
  1001  200003                     	org	2097155
  1002  200003  FF                 	db	255
  1003                           
  1004                           ;Config register IDLOC4 @ 0x200004
  1005                           ;	unspecified, using default values
  1006  200004                     	org	2097156
  1007  200004  FF                 	db	255
  1008                           
  1009                           ;Config register IDLOC5 @ 0x200005
  1010                           ;	unspecified, using default values
  1011  200005                     	org	2097157
  1012  200005  FF                 	db	255
  1013                           
  1014                           ;Config register IDLOC6 @ 0x200006
  1015                           ;	unspecified, using default values
  1016  200006                     	org	2097158
  1017  200006  FF                 	db	255
  1018                           
  1019                           ;Config register IDLOC7 @ 0x200007
  1020                           ;	unspecified, using default values
  1021  200007                     	org	2097159
  1022  200007  FF                 	db	255
  1023                           
  1024                           	psect	config
  1025                           
  1026                           ; Padding undefined space
  1027  300000                     	org	3145728
  1028  300000  FF                 	db	255
  1029                           
  1030                           ;Config register CONFIG1H @ 0x300001
  1031                           ;	Oscillator Selection bits
  1032                           ;	OSC = XT, XT oscillator
  1033                           ;	Fail-Safe Clock Monitor Enable bit
  1034                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1035                           ;	Internal/External Oscillator Switchover bit
  1036                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1037  300001                     	org	3145729
  1038  300001  01                 	db	1
  1039                           
  1040                           ;Config register CONFIG2L @ 0x300002
  1041                           ;	Power-up Timer Enable bit
  1042                           ;	PWRT = ON, PWRT enabled
  1043                           ;	Brown-out Reset Enable bits
  1044                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1045                           ;	Brown Out Reset Voltage bits
  1046                           ;	BORV = 3, Minimum setting
  1047  300002                     	org	3145730
  1048  300002  1E                 	db	30
  1049                           
  1050                           ;Config register CONFIG2H @ 0x300003
  1051                           ;	Watchdog Timer Enable bit
  1052                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1053                           ;	Watchdog Timer Postscale Select bits
  1054                           ;	WDTPS = 32768, 1:32768
  1055  300003                     	org	3145731
  1056  300003  1E                 	db	30
  1057                           
  1058                           ; Padding undefined space
  1059  300004                     	org	3145732
  1060  300004  FF                 	db	255
  1061                           
  1062                           ;Config register CONFIG3H @ 0x300005
  1063                           ;	CCP2 MUX bit
  1064                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1065                           ;	PORTB A/D Enable bit
  1066                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1067                           ;	Low-Power Timer1 Oscillator Enable bit
  1068                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1069                           ;	MCLR Pin Enable bit
  1070                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1071  300005                     	org	3145733
  1072  300005  81                 	db	129
  1073                           
  1074                           ;Config register CONFIG4L @ 0x300006
  1075                           ;	Stack Full/Underflow Reset Enable bit
  1076                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1077                           ;	Single-Supply ICSP Enable bit
  1078                           ;	LVP = OFF, Single-Supply ICSP disabled
  1079                           ;	Extended Instruction Set Enable bit
  1080                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1081                           ;	Background Debugger Enable bit
  1082                           ;	DEBUG = 0x1, unprogrammed default
  1083  300006                     	org	3145734
  1084  300006  81                 	db	129
  1085                           
  1086                           ; Padding undefined space
  1087  300007                     	org	3145735
  1088  300007  FF                 	db	255
  1089                           
  1090                           ;Config register CONFIG5L @ 0x300008
  1091                           ;	Code Protection bit
  1092                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1093                           ;	Code Protection bit
  1094                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1095                           ;	Code Protection bit
  1096                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1097                           ;	Code Protection bit
  1098                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1099  300008                     	org	3145736
  1100  300008  0F                 	db	15
  1101                           
  1102                           ;Config register CONFIG5H @ 0x300009
  1103                           ;	Boot Block Code Protection bit
  1104                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1105                           ;	Data EEPROM Code Protection bit
  1106                           ;	CPD = OFF, Data EEPROM not code-protected
  1107  300009                     	org	3145737
  1108  300009  C0                 	db	192
  1109                           
  1110                           ;Config register CONFIG6L @ 0x30000A
  1111                           ;	Write Protection bit
  1112                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1113                           ;	Write Protection bit
  1114                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1115                           ;	Write Protection bit
  1116                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1117                           ;	Write Protection bit
  1118                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1119  30000A                     	org	3145738
  1120  30000A  0F                 	db	15
  1121                           
  1122                           ;Config register CONFIG6H @ 0x30000B
  1123                           ;	Configuration Register Write Protection bit
  1124                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1125                           ;	Boot Block Write Protection bit
  1126                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1127                           ;	Data EEPROM Write Protection bit
  1128                           ;	WRTD = OFF, Data EEPROM not write-protected
  1129  30000B                     	org	3145739
  1130  30000B  E0                 	db	224
  1131                           
  1132                           ;Config register CONFIG7L @ 0x30000C
  1133                           ;	Table Read Protection bit
  1134                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1135                           ;	Table Read Protection bit
  1136                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1137                           ;	Table Read Protection bit
  1138                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1139                           ;	Table Read Protection bit
  1140                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1141  30000C                     	org	3145740
  1142  30000C  0F                 	db	15
  1143                           
  1144                           ;Config register CONFIG7H @ 0x30000D
  1145                           ;	Boot Block Table Read Protection bit
  1146                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1147  30000D                     	org	3145741
  1148  30000D  40                 	db	64
  1149                           tosu	equ	0xFFF
  1150                           tosh	equ	0xFFE
  1151                           tosl	equ	0xFFD
  1152                           stkptr	equ	0xFFC
  1153                           pclatu	equ	0xFFB
  1154                           pclath	equ	0xFFA
  1155                           pcl	equ	0xFF9
  1156                           tblptru	equ	0xFF8
  1157                           tblptrh	equ	0xFF7
  1158                           tblptrl	equ	0xFF6
  1159                           tablat	equ	0xFF5
  1160                           prodh	equ	0xFF4
  1161                           prodl	equ	0xFF3
  1162                           indf0	equ	0xFEF
  1163                           postinc0	equ	0xFEE
  1164                           postdec0	equ	0xFED
  1165                           preinc0	equ	0xFEC
  1166                           plusw0	equ	0xFEB
  1167                           fsr0h	equ	0xFEA
  1168                           fsr0l	equ	0xFE9
  1169                           wreg	equ	0xFE8
  1170                           indf1	equ	0xFE7
  1171                           postinc1	equ	0xFE6
  1172                           postdec1	equ	0xFE5
  1173                           preinc1	equ	0xFE4
  1174                           plusw1	equ	0xFE3
  1175                           fsr1h	equ	0xFE2
  1176                           fsr1l	equ	0xFE1
  1177                           bsr	equ	0xFE0
  1178                           indf2	equ	0xFDF
  1179                           postinc2	equ	0xFDE
  1180                           postdec2	equ	0xFDD
  1181                           preinc2	equ	0xFDC
  1182                           plusw2	equ	0xFDB
  1183                           fsr2h	equ	0xFDA
  1184                           fsr2l	equ	0xFD9
  1185                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      1       7
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_output_logic
    _main->_state_logic

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                        _init_system
                       _output_logic
                        _state_logic
 ---------------------------------------------------------------------------------
 (1) _state_logic                                          1     1      0      15
                                              0 COMRAM     1     1      0
                        _read_inputs
 ---------------------------------------------------------------------------------
 (2) _read_inputs                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _output_logic                                         1     1      0      15
                                              0 COMRAM     1     1      0
                      _write_outputs
 ---------------------------------------------------------------------------------
 (2) _write_outputs                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_system                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_system
   _output_logic
     _write_outputs
   _state_logic
     _read_inputs

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      1       7       1        5.6%
BITBIGSFRlhhlhh     2B      0       0      19        0.0%
BITBIGSFRlhhhh      20      0       0      17        0.0%
BITBIGSFRlhhhl       E      0       0      18        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRlhhlhl      6      0       0      21        0.0%
BITBIGSFRlhhll       6      0       0      23        0.0%
BITBIGSFRlhhlhh      1      0       0      20        0.0%
BITBIGSFRlhhlhl      1      0       0      22        0.0%
BITBIGSFRlhl         1      0       0      24        0.0%
BITBIGSFRll          1      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       7      26        0.0%
DATA                 0      0       7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue May 24 18:11:22 2022

                     l60 02A4                       l66 0184                       l92 0186  
                     u10 002A                       u11 0026                       u20 003E  
                     u21 003A                       u30 005E                       u31 005A  
                     u40 0076                       u41 0072                       u50 008E  
                     u51 008A                       u60 00A6                       u61 00A2  
                     u70 00BE                       u71 00BA                       u80 00D6  
                     u81 00D2                       u90 00EE                       u91 00EA  
            _state_logic 0012                      l110 0272                      l120 0322  
                    l123 02D8                      l117 034A                      l901 004E  
                    l911 007E                      l903 005E                      l921 00BE  
                    l913 008E                      l931 00F6                      l923 00C6  
                    l915 0096                      l907 0066                      l933 0106  
                    l925 00D6                      l917 00A6                      l909 0076  
                    l951 0190                      l871 0342                      l935 010E  
                    l927 00DE                      l919 00AE                      l943 012A  
                    l881 02CE                      l873 0304                      l961 01B8  
                    l953 0198                      l929 00EE                      l945 0180  
                    l883 02D0                      l875 02AE                      l971 01E0  
                    l963 01C0                      l955 01A0                      l939 0122  
                    l891 001A                      l885 02D2                      l877 02CA  
                    l981 0260                      l965 01C8                      l957 01A8  
                    l949 0188                      l879 02CC                      l983 0268  
                    l967 01D0                      l959 01B0                      l975 01E8  
                    l895 002E                      l887 0012                      l991 0274  
                    l985 026C                      l969 01D8                      l977 023E  
                    l897 003E                      l889 0016                      l993 0278  
                    l987 0270                      l979 0250                      l899 0046  
                    _GIE 007F97                      l997 0290                      u100 0106  
                    u101 0102                      u110 011E                      u111 011A  
                    u120 0250                      u121 024C                      u130 0260  
                    u131 025C                      u140 028C                      u141 0288  
                    u150 02A4                      u151 02A0                      _ISR 0008  
                    wreg 000FE8                     ?_ISR 0007                     _LATB 000F8A  
                   _LATD 000F8C                     _IPEN 007E87                     _PEIE 007F96  
                   _main 0274                     btemp 0008                     start 000E  
           ___param_bank 000000                    ??_ISR 0007         state_logic@error 0007  
                  ?_main 0007                    i2l114 033E                    _PORTB 000F81  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISD 000F95  
           ?_init_system 0007             ?_read_inputs 0007             _output_logic 0188  
                  tablat 000FF5                    ttemp5 0009                    ttemp6 000C  
                  ttemp7 0010                    status 000FD8                    wtemp8 0009  
        __initialization 02DA             __end_of_main 02AE                   ??_main 0008  
          __activetblptr 000002                   _ADCON1 000FC1                   _INT0IE 007F94  
                 _INT0IF 007F91                   i2l1001 0326                   i2l1003 0336  
                 i2l1005 033A                   i2l1007 033C                   _Var_CE 0005  
                 isa$std 000001             __pdataCOMRAM 0006                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 02F6            ___rparam_used 000001           __pcstackCOMRAM 0007  
           ?_state_logic 0007            _current_state 0006                  _INTEDG0 007F8E  
                i2u16_40 0336                  i2u16_41 0332                  __Hparam 0000  
                __Lparam 0000            _write_outputs 0304                  __pcinit 02DA  
                __ramtop 0600                  __ptext0 0274                  __ptext1 0012  
                __ptext2 0342                  __ptext3 0188                  __ptext4 0304  
                __ptext5 02AE           __pintcode_body 0324     end_of_initialization 02F6  
          __Lmediumconst 0000                  int_func 0324           ?_write_outputs 0007  
          __pidataCOMRAM 034C      start_initialization 02DA              __end_of_ISR 0342  
        ??_write_outputs 0007              __pbssCOMRAM 0001            ??_init_system 0007  
          ??_read_inputs 0007            ?_output_logic 0007             _Var_BCD_code 0003  
           _Var_CLK_Flag 0001                __pintcode 0008           ??_output_logic 0007  
    __end_of_init_system 02DA      __end_of_read_inputs 034C                 _Var_TC10 0004  
               __Hrparam 0000                 _Var_data 0002                 __Lrparam 0000  
          ??_state_logic 0007              _init_system 02AE              _read_inputs 0342  
   __end_of_output_logic 0274                 isa$xinst 000000                 int$flags 0008  
    __end_of_state_logic 0188                 intlevel2 0000    __end_of_write_outputs 0324  
      output_logic@error 0007  
